# sorteo_project/settings.py

"""
Django settings for sorteo_project project.
Generated by 'django-admin startproject' using Django 5.1.5.
Para más información, visita https://docs.djangoproject.com/en/5.1/topics/settings/
y https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import dj_database_url
from dotenv import load_dotenv
import os
import logging.config

load_dotenv()

BASE_DIR = Path(__file__).resolve().parent.parent

# RENDER.COM
TEMPLATES[0]['DIRS'] = [ BASE_DIR / 'sorteo-frontend' / 'build' ]



# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', "django-insecure-*!)y=(x-y1vj5s5i^y5a_zv(4z1&wvl%f00umni1x6cv@8hwd2")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('ENV', 'development') == 'development'

ALLOWED_HOSTS = ['web-production-0252.up.railway.app', 'localhost', '127.0.0.1', 'teco-sorteos.onrender.com']

# DATABASE
if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / "db.sqlite3",
        }
    }
else:
    DATABASES = {
        'default': dj_database_url.config(
            default=os.getenv('DATABASE_URL'),
            conn_max_age=600,
            ssl_require=True
        )
    }

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "whitenoise.runserver_nostatic",
    # Apps de terceros
    'rest_framework',
    'corsheaders',
    # Tu app
    'sorteo_app',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'corsheaders.middleware.CorsMiddleware',
]

# Configurar CORS
CORS_ALLOWED_ORIGINS = [
  "http://localhost:3000",
  "https://teco-sorteos.netlify.app",
]
CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = "sorteo_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "sorteo_project.wsgi.application"

# DRF configuration: se incluye autenticación y permisos básicos (se puede ampliar)
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',  # Cambiar a IsAuthenticated en producción
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.TokenAuthentication',  # habilitar si usas tokens
    ],
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]

LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

STATIC_URL = "static/"

#RENDER.COM
# OCULTO STATICFILES_DIRS = [os.path.join(BASE_DIR, 'sorteo_app/static')]

# Servir los assets estáticos de React
STATICFILES_DIRS = [
  BASE_DIR / 'sorteo-frontend' / 'build' / 'static',
  os.path.join(BASE_DIR, 'sorteo_app', 'static'),
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    }
}

CSRF_TRUSTED_ORIGINS = ["http://*", "https://web-production-0252.up.railway.app"]

# Configuración de Logging
LOGGING_CONFIG = None
LOGLEVEL = os.getenv('LOGLEVEL', 'INFO').upper()
logging.config.dictConfig({
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': LOGLEVEL,
    },
})

# Posibles mejoras: agregar configuración de email, roles, etc.
