{"ast":null,"code":"import _objectSpread from\"/Users/luciano/Desktop/git sorteo/sorteo_project/sorteo-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// sorteo-frontend/src/components/UploadCSV.js\nimport React,{useCallback,useState}from'react';import{useDropzone}from'react-dropzone';import{toast}from'react-toastify';import ClipLoader from'react-spinners/ClipLoader';import{API_BASE_URL}from'../config';import'./UploadCSV.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function UploadCSV(){const[fileUsuarios,setFileUsuarios]=useState(null);const[fileListaNegra,setFileListaNegra]=useState(null);const[cargando,setCargando]=useState(false);const onDropUsuarios=useCallback(acceptedFiles=>{const file=acceptedFiles[0];if(file&&file.type==='text/csv'){setFileUsuarios(file);toast.success(\"Archivo de usuarios \\\"\".concat(file.name,\"\\\" cargado correctamente.\"));}else{toast.error('Por favor, sube un archivo CSV v치lido para usuarios.');}},[]);const onDropListaNegra=useCallback(acceptedFiles=>{const file=acceptedFiles[0];if(file&&file.type==='text/csv'){setFileListaNegra(file);toast.success(\"Archivo de lista negra \\\"\".concat(file.name,\"\\\" cargado correctamente.\"));}else{toast.error('Por favor, sube un archivo CSV v치lido para lista negra.');}},[]);const{getRootProps:getRootPropsUsuarios,getInputProps:getInputPropsUsuarios,isDragActive:isDragActiveUsuarios}=useDropzone({onDrop:onDropUsuarios,accept:{'text/csv':['.csv']}});const{getRootProps:getRootPropsListaNegra,getInputProps:getInputPropsListaNegra,isDragActive:isDragActiveListaNegra}=useDropzone({onDrop:onDropListaNegra,accept:{'text/csv':['.csv']}});const handleUpload=async()=>{if(!fileUsuarios&&!fileListaNegra){toast.error('Por favor, arrastra al menos un archivo: usuarios o lista negra.');return;}setCargando(true);try{const formData=new FormData();if(fileUsuarios){formData.append('usuarios',fileUsuarios);}if(fileListaNegra){formData.append('lista_negra',fileListaNegra);}const response=await fetch(\"\".concat(API_BASE_URL,\"/api/upload_csv/\"),{method:'POST',body:formData});const data=await response.json();if(response.ok){toast.success(data.usuarios?data.usuarios:data.lista_negra);setFileUsuarios(null);setFileListaNegra(null);}else{toast.error(data.error||'Error al subir CSV');}}catch(err){console.error(err);toast.error('Error al subir CSV.');}finally{setCargando(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"upload-csv-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Subir Archivos CSV\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropzone-container\",children:[/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({},getRootPropsUsuarios()),{},{className:\"dropzone \".concat(isDragActiveUsuarios?'active':''),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({},getInputPropsUsuarios())),fileUsuarios?/*#__PURE__*/_jsx(\"p\",{children:fileUsuarios.name}):/*#__PURE__*/_jsx(\"p\",{children:\"Arrastra el CSV de usuarios o haz clic para seleccionarlo\"})]})),/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({},getRootPropsListaNegra()),{},{className:\"dropzone \".concat(isDragActiveListaNegra?'active':''),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({},getInputPropsListaNegra())),fileListaNegra?/*#__PURE__*/_jsx(\"p\",{children:fileListaNegra.name}):/*#__PURE__*/_jsx(\"p\",{children:\"Arrastra el CSV de lista negra o haz clic para seleccionarlo\"})]}))]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,className:\"upload-button\",disabled:cargando,children:cargando?/*#__PURE__*/_jsx(ClipLoader,{size:20,color:\"#ffffff\"}):'Subir CSV'}),/*#__PURE__*/_jsxs(\"div\",{className:\"descargar-plantillas\",style:{marginTop:'1rem'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Descargar Plantillas CSV\"}),/*#__PURE__*/_jsx(\"a\",{href:\"\".concat(API_BASE_URL,\"/api/download_template/participantes/\"),download:\"participantes_template.csv\",className:\"btn\",children:\"Descargar Plantilla de Participantes\"}),/*#__PURE__*/_jsx(\"a\",{href:\"\".concat(API_BASE_URL,\"/api/download_template/lista_negra/\"),download:\"lista_negra_template.csv\",className:\"btn\",style:{marginLeft:'1rem'},children:\"Descargar Plantilla de Lista Negra\"})]})]});}export default UploadCSV;","map":{"version":3,"names":["React","useCallback","useState","useDropzone","toast","ClipLoader","API_BASE_URL","jsx","_jsx","jsxs","_jsxs","UploadCSV","fileUsuarios","setFileUsuarios","fileListaNegra","setFileListaNegra","cargando","setCargando","onDropUsuarios","acceptedFiles","file","type","success","concat","name","error","onDropListaNegra","getRootProps","getRootPropsUsuarios","getInputProps","getInputPropsUsuarios","isDragActive","isDragActiveUsuarios","onDrop","accept","getRootPropsListaNegra","getInputPropsListaNegra","isDragActiveListaNegra","handleUpload","formData","FormData","append","response","fetch","method","body","data","json","ok","usuarios","lista_negra","err","console","className","children","_objectSpread","onClick","disabled","size","color","style","marginTop","href","download","marginLeft"],"sources":["/Users/luciano/Desktop/git sorteo/sorteo_project/sorteo-frontend/src/components/UploadCSV.js"],"sourcesContent":["// sorteo-frontend/src/components/UploadCSV.js\n\nimport React, {useCallback, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {toast} from 'react-toastify';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport {API_BASE_URL} from '../config';\nimport './UploadCSV.css';\n\nfunction UploadCSV () {\n  const [fileUsuarios, setFileUsuarios] = useState (null);\n  const [fileListaNegra, setFileListaNegra] = useState (null);\n  const [cargando, setCargando] = useState (false);\n\n  const onDropUsuarios = useCallback (acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type === 'text/csv') {\n      setFileUsuarios (file);\n      toast.success (\n        `Archivo de usuarios \"${file.name}\" cargado correctamente.`\n      );\n    } else {\n      toast.error ('Por favor, sube un archivo CSV v치lido para usuarios.');\n    }\n  }, []);\n\n  const onDropListaNegra = useCallback (acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type === 'text/csv') {\n      setFileListaNegra (file);\n      toast.success (\n        `Archivo de lista negra \"${file.name}\" cargado correctamente.`\n      );\n    } else {\n      toast.error ('Por favor, sube un archivo CSV v치lido para lista negra.');\n    }\n  }, []);\n\n  const {\n    getRootProps: getRootPropsUsuarios,\n    getInputProps: getInputPropsUsuarios,\n    isDragActive: isDragActiveUsuarios,\n  } = useDropzone ({onDrop: onDropUsuarios, accept: {'text/csv': ['.csv']}});\n\n  const {\n    getRootProps: getRootPropsListaNegra,\n    getInputProps: getInputPropsListaNegra,\n    isDragActive: isDragActiveListaNegra,\n  } = useDropzone ({onDrop: onDropListaNegra, accept: {'text/csv': ['.csv']}});\n\n  const handleUpload = async () => {\n    if (!fileUsuarios && !fileListaNegra) {\n      toast.error (\n        'Por favor, arrastra al menos un archivo: usuarios o lista negra.'\n      );\n      return;\n    }\n    setCargando (true);\n    try {\n      const formData = new FormData ();\n      if (fileUsuarios) {\n        formData.append ('usuarios', fileUsuarios);\n      }\n      if (fileListaNegra) {\n        formData.append ('lista_negra', fileListaNegra);\n      }\n      const response = await fetch (`${API_BASE_URL}/api/upload_csv/`, {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json ();\n      if (response.ok) {\n        toast.success (data.usuarios ? data.usuarios : data.lista_negra);\n        setFileUsuarios (null);\n        setFileListaNegra (null);\n      } else {\n        toast.error (data.error || 'Error al subir CSV');\n      }\n    } catch (err) {\n      console.error (err);\n      toast.error ('Error al subir CSV.');\n    } finally {\n      setCargando (false);\n    }\n  };\n\n  return (\n    <div className=\"upload-csv-container\">\n      <h2>Subir Archivos CSV</h2>\n      <div className=\"dropzone-container\">\n        <div\n          {...getRootPropsUsuarios ()}\n          className={`dropzone ${isDragActiveUsuarios ? 'active' : ''}`}\n        >\n          <input {...getInputPropsUsuarios ()} />\n          {fileUsuarios\n            ? <p>{fileUsuarios.name}</p>\n            : <p>Arrastra el CSV de usuarios o haz clic para seleccionarlo</p>}\n        </div>\n        <div\n          {...getRootPropsListaNegra ()}\n          className={`dropzone ${isDragActiveListaNegra ? 'active' : ''}`}\n        >\n          <input {...getInputPropsListaNegra ()} />\n          {fileListaNegra\n            ? <p>{fileListaNegra.name}</p>\n            : <p>\n                Arrastra el CSV de lista negra o haz clic para seleccionarlo\n              </p>}\n        </div>\n      </div>\n      <button\n        onClick={handleUpload}\n        className=\"upload-button\"\n        disabled={cargando}\n      >\n        {cargando ? <ClipLoader size={20} color=\"#ffffff\" /> : 'Subir CSV'}\n      </button>\n      <div className=\"descargar-plantillas\" style={{marginTop: '1rem'}}>\n        <h3>Descargar Plantillas CSV</h3>\n        <a\n          href={`${API_BASE_URL}/api/download_template/participantes/`}\n          download=\"participantes_template.csv\"\n          className=\"btn\"\n        >\n          Descargar Plantilla de Participantes\n        </a>\n        <a\n          href={`${API_BASE_URL}/api/download_template/lista_negra/`}\n          download=\"lista_negra_template.csv\"\n          className=\"btn\"\n          style={{marginLeft: '1rem'}}\n        >\n          Descargar Plantilla de Lista Negra\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadCSV;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}