{"ast":null,"code":"import _objectSpread from\"/Users/luciano/Desktop/git sorteo/sorteo_project/sorteo-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// sorteo-frontend/src/components/Sorteo.js\nimport React,{useState,useEffect}from'react';import{DndContext,closestCenter,KeyboardSensor,PointerSensor,useSensor,useSensors}from'@dnd-kit/core';import{arrayMove,SortableContext,useSortable,verticalListSortingStrategy}from'@dnd-kit/sortable';import{CSS}from'@dnd-kit/utilities';import{toast}from'react-toastify';import ClipLoader from'react-spinners/ClipLoader';import'./Sorteo.css';import{API_BASE_URL}from'../config';//\n// Componente para cada ítem ordenable\n//\nimport{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";function SortableItem(props){const{id,nombre_item,cantidad,index}=props;const{attributes,listeners,setNodeRef,transform,transition,isDragging}=useSortable({id});const style={transform:CSS.Transform.toString(transform),transition,opacity:isDragging?0.5:1,padding:'8px',marginBottom:'5px',border:'1px solid #ccc',borderRadius:'4px',backgroundColor:'#fff',cursor:'grab'};return/*#__PURE__*/_jsxs(\"li\",_objectSpread(_objectSpread(_objectSpread({ref:setNodeRef,style:style},attributes),listeners),{},{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[index+1,\"\\xB0\"]}),\" \",nombre_item,\" - Cantidad: \",cantidad]}));}//\n// Componente Sorteo (sin WebSocket)\n//\nfunction Sorteo(){// 1) Campos básicos del sorteo\nconst[nombreSorteo,setNombreSorteo]=useState('');const[descripcion,setDescripcion]=useState('');// 2) Filtros\nconst[usarFiltros,setUsarFiltros]=useState(false);const[provincias,setProvincias]=useState([]);const[provinciaSeleccionada,setProvinciaSeleccionada]=useState('');const[localidades,setLocalidades]=useState([]);const[localidadSeleccionada,setLocalidadSeleccionada]=useState('');// 3) Premios a sortear (con drag & drop)\n// Cada ítem: { id, nombre_item, cantidad }\nconst[items,setItems]=useState([]);const[availablePremios,setAvailablePremios]=useState([]);const[selectedPremioId,setSelectedPremioId]=useState('');const[selectedPremioCantidad,setSelectedPremioCantidad]=useState(1);// 4) Resultado del sorteo\nconst[resultado,setResultado]=useState(null);// 5) Indicador de carga\nconst[cargando,setCargando]=useState(false);// Sensores para dnd-kit\nconst sensors=useSensors(useSensor(PointerSensor),useSensor(KeyboardSensor));// Cargar provincias (si se usan filtros)\nuseEffect(()=>{if(usarFiltros){fetch(\"\".concat(API_BASE_URL,\"/api/provincias/\")).then(res=>res.json()).then(data=>setProvincias(data)).catch(err=>{console.error(err);toast.error('Error al cargar provincias.');});}else{setProvincias([]);setProvinciaSeleccionada('');setLocalidades([]);setLocalidadSeleccionada('');}},[usarFiltros]);// Cargar localidades cuando cambia provincia\nuseEffect(()=>{if(usarFiltros&&provinciaSeleccionada){fetch(\"\".concat(API_BASE_URL,\"/api/localidades/?provincia=\").concat(provinciaSeleccionada)).then(res=>res.json()).then(data=>setLocalidades(data)).catch(err=>{console.error(err);toast.error('Error al cargar localidades.');});}else{setLocalidades([]);setLocalidadSeleccionada('');}},[usarFiltros,provinciaSeleccionada]);// Cargar premios disponibles\nuseEffect(()=>{fetchAvailablePremios();},[]);const fetchAvailablePremios=async()=>{try{const response=await fetch(\"\".concat(API_BASE_URL,\"/api/premios/\"));const data=await response.json();// Filtrar premios con stock > 0\nconst available=data.filter(p=>p.stock>0);setAvailablePremios(available);}catch(error){console.error('Error al obtener los premios:',error);toast.error('Error al obtener los premios.');}};// Agregar un premio seleccionado al sorteo\nconst agregarPremioAlSorteo=()=>{if(!selectedPremioId){toast.error('Por favor, selecciona un premio.');return;}const premio=availablePremios.find(p=>p.id===parseInt(selectedPremioId));if(!premio){toast.error('Premio no encontrado.');return;}if(selectedPremioCantidad<1){toast.error('La cantidad debe ser al menos 1.');return;}if(selectedPremioCantidad>premio.stock){toast.error(\"No hay suficiente stock para el premio \".concat(premio.nombre,\". Stock disponible: \").concat(premio.stock));return;}setItems([...items,{id:premio.id,nombre_item:premio.nombre,cantidad:selectedPremioCantidad}]);// Remueve el premio de la lista disponible\nsetAvailablePremios(availablePremios.filter(p=>p.id!==premio.id));// Resetea la selección\nsetSelectedPremioId('');setSelectedPremioCantidad(1);toast.success(\"Premio \\\"\".concat(premio.nombre,\"\\\" agregado al sorteo.\"));};// Eliminar un premio del sorteo\nconst eliminarPremioDelSorteo=id=>{const premio=items.find(p=>p.id===id);if(!premio)return;setItems(items.filter(p=>p.id!==id));// Reinserta el premio a la lista de disponibles (puedes ajustar la lógica de stock según sea necesario)\nsetAvailablePremios([...availablePremios,{id:premio.id,nombre:premio.nombre_item,stock:premio.cantidad}]);toast.info(\"Premio \\\"\".concat(premio.nombre_item,\"\\\" eliminado del sorteo.\"));};// Manejar el fin del Drag & Drop\nconst handleDragEnd=event=>{const{active,over}=event;if(active.id!==over.id){const oldIndex=items.findIndex(item=>item.id===active.id);const newIndex=items.findIndex(item=>item.id===over.id);setItems(arrayMove(items,oldIndex,newIndex));}};// Enviar la solicitud del sorteo (sin window.confirm)\nconst handleSortear=async()=>{if(items.length===0){toast.error('Por favor, agrega al menos un premio para sortear.');return;}// Se suma la cantidad de cada premio (ya viene en cada objeto)\nconst premiosConOrden=items.map((it,index)=>({premio_id:it.id,orden_item:index+1,cantidad:it.cantidad}));const payload={nombre:nombreSorteo,descripcion:descripcion,premios:premiosConOrden};if(usarFiltros){payload.provincia=provinciaSeleccionada;payload.localidad=localidadSeleccionada;}console.log(\"Enviando solicitud con payload:\",payload);setCargando(true);try{const response=await fetch(\"\".concat(API_BASE_URL,\"/api/sortear/\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});const data=await response.json();console.log(\"Respuesta del servidor:\",data);if(response.ok){setResultado(data);// Actualiza la lista de premios disponibles (por si el stock cambió)\nfetchAvailablePremios();setNombreSorteo('');setDescripcion('');setItems([]);toast.success('Sorteo realizado exitosamente.');}else{toast.error(data.error||'Error al sortear');setResultado(null);}}catch(err){console.error(\"Error de conexión:\",err);toast.error('Error de conexión');setResultado(null);}finally{setCargando(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"sorteo-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Realizar Sorteo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sorteo-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Nombre del sorteo:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:nombreSorteo,onChange:e=>setNombreSorteo(e.target.value),placeholder:\"Nombre del sorteo\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sorteo-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Descripci\\xF3n:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:descripcion,onChange:e=>setDescripcion(e.target.value),placeholder:\"Descripci\\xF3n del sorteo\"})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"sorteo-section\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:usarFiltros,onChange:()=>setUsarFiltros(!usarFiltros)}),\"\\xBFAplicar filtros de provincia/localidad?\"]})}),usarFiltros&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sorteo-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Provincia:\"}),/*#__PURE__*/_jsxs(\"select\",{value:provinciaSeleccionada,onChange:e=>setProvinciaSeleccionada(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Seleccionar provincia --\"}),provincias.map((prov,idx)=>/*#__PURE__*/_jsx(\"option\",{value:prov,children:prov},idx))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sorteo-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Localidad:\"}),/*#__PURE__*/_jsxs(\"select\",{value:localidadSeleccionada,onChange:e=>setLocalidadSeleccionada(e.target.value),disabled:!provinciaSeleccionada,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Seleccionar localidad --\"}),localidades.map((loc,idx)=>/*#__PURE__*/_jsx(\"option\",{value:loc,children:loc},idx))]})]})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h3\",{children:\"Agregar Premios al Sorteo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sorteo-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Selecciona un premio:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedPremioId,onChange:e=>setSelectedPremioId(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Seleccionar premio --\"}),availablePremios.map(premio=>/*#__PURE__*/_jsxs(\"option\",{value:premio.id,children:[premio.nombre,\" (Stock: \",premio.stock,\")\"]},premio.id))]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Cantidad\",value:selectedPremioCantidad,onChange:e=>setSelectedPremioCantidad(Number(e.target.value)),min:\"1\",style:{marginLeft:'10px',width:'60px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:agregarPremioAlSorteo,style:{marginLeft:'10px'},children:\"Agregar Premio\"})]}),items.length>0&&/*#__PURE__*/_jsx(DndContext,{collisionDetection:closestCenter,onDragEnd:handleDragEnd,sensors:sensors,children:/*#__PURE__*/_jsx(SortableContext,{items:items.map(item=>item.id),strategy:verticalListSortingStrategy,children:/*#__PURE__*/_jsx(\"ul\",{className:\"sorteo-list\",children:items.map((item,index)=>/*#__PURE__*/_jsx(SortableItem,{id:item.id,nombre_item:item.nombre_item,cantidad:item.cantidad,index:index},item.id))})})}),items.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"sorteo-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Lista de Premios en el Sorteo\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"sorteo-list\",children:items.map(item=>/*#__PURE__*/_jsxs(\"li\",{className:\"sorteo-item\",children:[item.nombre_item,\" - Cantidad: \",item.cantidad,/*#__PURE__*/_jsx(\"button\",{onClick:()=>eliminarPremioDelSorteo(item.id),className:\"eliminar-btn\",children:\"Eliminar\"})]},item.id))})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"sorteo-section\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleSortear,className:\"sortear-btn\",disabled:cargando,children:cargando?/*#__PURE__*/_jsx(ClipLoader,{size:20,color:\"#ffffff\"}):'Sortear'})}),resultado&&/*#__PURE__*/_jsxs(\"div\",{className:\"sorteo-result\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Resultado del Sorteo\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"ID: \",resultado.sorteo_id,\" - Nombre: \",resultado.nombre_sorteo]}),resultado.items&&resultado.items.length>0?/*#__PURE__*/_jsx(\"ul\",{children:resultado.items.map((itemObj,i)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[itemObj.orden_item,\"\\xB0 Premio:\"]}),\" \",itemObj.nombre_item,/*#__PURE__*/_jsx(\"ul\",{children:itemObj.ganadores.map((ganador,j)=>/*#__PURE__*/_jsxs(\"li\",{children:[\"Ganador: \",ganador.nombre,\" \",ganador.apellido,\" (\",ganador.email,\")\"]},j))})]},i))}):/*#__PURE__*/_jsx(\"p\",{children:\"Sin items en la respuesta.\"})]})]});}export default Sorteo;","map":{"version":3,"names":["React","useState","useEffect","DndContext","closestCenter","KeyboardSensor","PointerSensor","useSensor","useSensors","arrayMove","SortableContext","useSortable","verticalListSortingStrategy","CSS","toast","ClipLoader","API_BASE_URL","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","SortableItem","props","id","nombre_item","cantidad","index","attributes","listeners","setNodeRef","transform","transition","isDragging","style","Transform","toString","opacity","padding","marginBottom","border","borderRadius","backgroundColor","cursor","_objectSpread","ref","children","Sorteo","nombreSorteo","setNombreSorteo","descripcion","setDescripcion","usarFiltros","setUsarFiltros","provincias","setProvincias","provinciaSeleccionada","setProvinciaSeleccionada","localidades","setLocalidades","localidadSeleccionada","setLocalidadSeleccionada","items","setItems","availablePremios","setAvailablePremios","selectedPremioId","setSelectedPremioId","selectedPremioCantidad","setSelectedPremioCantidad","resultado","setResultado","cargando","setCargando","sensors","fetch","concat","then","res","json","data","catch","err","console","error","fetchAvailablePremios","response","available","filter","p","stock","agregarPremioAlSorteo","premio","find","parseInt","nombre","success","eliminarPremioDelSorteo","info","handleDragEnd","event","active","over","oldIndex","findIndex","item","newIndex","handleSortear","length","premiosConOrden","map","it","premio_id","orden_item","payload","premios","provincia","localidad","log","method","headers","body","JSON","stringify","ok","className","type","value","onChange","e","target","placeholder","checked","prov","idx","disabled","loc","Number","min","marginLeft","width","onClick","collisionDetection","onDragEnd","strategy","size","color","sorteo_id","nombre_sorteo","itemObj","i","ganadores","ganador","j","apellido","email"],"sources":["/Users/luciano/Desktop/git sorteo/sorteo_project/sorteo-frontend/src/components/Sorteo.js"],"sourcesContent":["// sorteo-frontend/src/components/Sorteo.js\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  useSortable,\n  verticalListSortingStrategy\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { toast } from 'react-toastify';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport './Sorteo.css';\nimport { API_BASE_URL } from '../config';\n\n//\n// Componente para cada ítem ordenable\n//\nfunction SortableItem(props) {\n  const { id, nombre_item, cantidad, index } = props;\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n    padding: '8px',\n    marginBottom: '5px',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n    backgroundColor: '#fff',\n    cursor: 'grab'\n  };\n\n  return (\n    <li ref={setNodeRef} style={style} {...attributes} {...listeners}>\n      <strong>{index + 1}°</strong> {nombre_item} - Cantidad: {cantidad}\n    </li>\n  );\n}\n\n//\n// Componente Sorteo (sin WebSocket)\n//\nfunction Sorteo() {\n  // 1) Campos básicos del sorteo\n  const [nombreSorteo, setNombreSorteo] = useState('');\n  const [descripcion, setDescripcion] = useState('');\n\n  // 2) Filtros\n  const [usarFiltros, setUsarFiltros] = useState(false);\n  const [provincias, setProvincias] = useState([]);\n  const [provinciaSeleccionada, setProvinciaSeleccionada] = useState('');\n  const [localidades, setLocalidades] = useState([]);\n  const [localidadSeleccionada, setLocalidadSeleccionada] = useState('');\n\n  // 3) Premios a sortear (con drag & drop)\n  // Cada ítem: { id, nombre_item, cantidad }\n  const [items, setItems] = useState([]);\n  const [availablePremios, setAvailablePremios] = useState([]);\n  const [selectedPremioId, setSelectedPremioId] = useState('');\n  const [selectedPremioCantidad, setSelectedPremioCantidad] = useState(1);\n\n  // 4) Resultado del sorteo\n  const [resultado, setResultado] = useState(null);\n\n  // 5) Indicador de carga\n  const [cargando, setCargando] = useState(false);\n\n  // Sensores para dnd-kit\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor)\n  );\n\n  // Cargar provincias (si se usan filtros)\n  useEffect(() => {\n    if (usarFiltros) {\n      fetch(`${API_BASE_URL}/api/provincias/`)\n        .then(res => res.json())\n        .then(data => setProvincias(data))\n        .catch(err => {\n          console.error(err);\n          toast.error('Error al cargar provincias.');\n        });\n    } else {\n      setProvincias([]);\n      setProvinciaSeleccionada('');\n      setLocalidades([]);\n      setLocalidadSeleccionada('');\n    }\n  }, [usarFiltros]);\n\n  // Cargar localidades cuando cambia provincia\n  useEffect(() => {\n    if (usarFiltros && provinciaSeleccionada) {\n      fetch(`${API_BASE_URL}/api/localidades/?provincia=${provinciaSeleccionada}`)\n        .then(res => res.json())\n        .then(data => setLocalidades(data))\n        .catch(err => {\n          console.error(err);\n          toast.error('Error al cargar localidades.');\n        });\n    } else {\n      setLocalidades([]);\n      setLocalidadSeleccionada('');\n    }\n  }, [usarFiltros, provinciaSeleccionada]);\n\n  // Cargar premios disponibles\n  useEffect(() => {\n    fetchAvailablePremios();\n  }, []);\n\n  const fetchAvailablePremios = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/premios/`);\n      const data = await response.json();\n      // Filtrar premios con stock > 0\n      const available = data.filter(p => p.stock > 0);\n      setAvailablePremios(available);\n    } catch (error) {\n      console.error('Error al obtener los premios:', error);\n      toast.error('Error al obtener los premios.');\n    }\n  };\n\n  // Agregar un premio seleccionado al sorteo\n  const agregarPremioAlSorteo = () => {\n    if (!selectedPremioId) {\n      toast.error('Por favor, selecciona un premio.');\n      return;\n    }\n    const premio = availablePremios.find(p => p.id === parseInt(selectedPremioId));\n    if (!premio) {\n      toast.error('Premio no encontrado.');\n      return;\n    }\n    if (selectedPremioCantidad < 1) {\n      toast.error('La cantidad debe ser al menos 1.');\n      return;\n    }\n    if (selectedPremioCantidad > premio.stock) {\n      toast.error(`No hay suficiente stock para el premio ${premio.nombre}. Stock disponible: ${premio.stock}`);\n      return;\n    }\n    setItems([...items, {\n      id: premio.id,\n      nombre_item: premio.nombre,\n      cantidad: selectedPremioCantidad\n    }]);\n    // Remueve el premio de la lista disponible\n    setAvailablePremios(availablePremios.filter(p => p.id !== premio.id));\n    // Resetea la selección\n    setSelectedPremioId('');\n    setSelectedPremioCantidad(1);\n    toast.success(`Premio \"${premio.nombre}\" agregado al sorteo.`);\n  };\n\n  // Eliminar un premio del sorteo\n  const eliminarPremioDelSorteo = (id) => {\n    const premio = items.find(p => p.id === id);\n    if (!premio) return;\n    setItems(items.filter(p => p.id !== id));\n    // Reinserta el premio a la lista de disponibles (puedes ajustar la lógica de stock según sea necesario)\n    setAvailablePremios([...availablePremios, {\n      id: premio.id,\n      nombre: premio.nombre_item,\n      stock: premio.cantidad\n    }]);\n    toast.info(`Premio \"${premio.nombre_item}\" eliminado del sorteo.`);\n  };\n\n  // Manejar el fin del Drag & Drop\n  const handleDragEnd = (event) => {\n    const { active, over } = event;\n    if (active.id !== over.id) {\n      const oldIndex = items.findIndex(item => item.id === active.id);\n      const newIndex = items.findIndex(item => item.id === over.id);\n      setItems(arrayMove(items, oldIndex, newIndex));\n    }\n  };\n\n  // Enviar la solicitud del sorteo (sin window.confirm)\n  const handleSortear = async () => {\n    if (items.length === 0) {\n      toast.error('Por favor, agrega al menos un premio para sortear.');\n      return;\n    }\n    // Se suma la cantidad de cada premio (ya viene en cada objeto)\n    const premiosConOrden = items.map((it, index) => ({\n      premio_id: it.id,\n      orden_item: index + 1,\n      cantidad: it.cantidad\n    }));\n    const payload = {\n      nombre: nombreSorteo,\n      descripcion: descripcion,\n      premios: premiosConOrden\n    };\n    if (usarFiltros) {\n      payload.provincia = provinciaSeleccionada;\n      payload.localidad = localidadSeleccionada;\n    }\n    console.log(\"Enviando solicitud con payload:\", payload);\n    setCargando(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/sortear/`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload),\n      });\n      const data = await response.json();\n      console.log(\"Respuesta del servidor:\", data);\n      if (response.ok) {\n        setResultado(data);\n        // Actualiza la lista de premios disponibles (por si el stock cambió)\n        fetchAvailablePremios();\n        setNombreSorteo('');\n        setDescripcion('');\n        setItems([]);\n        toast.success('Sorteo realizado exitosamente.');\n      } else {\n        toast.error(data.error || 'Error al sortear');\n        setResultado(null);\n      }\n    } catch (err) {\n      console.error(\"Error de conexión:\", err);\n      toast.error('Error de conexión');\n      setResultado(null);\n    } finally {\n      setCargando(false);\n    }\n  };\n\n  return (\n    <div className=\"sorteo-container\">\n      <h1>Realizar Sorteo</h1>\n      {/* Datos del sorteo */}\n      <div className=\"sorteo-section\">\n        <label>Nombre del sorteo:</label>\n        <input\n          type=\"text\"\n          value={nombreSorteo}\n          onChange={(e) => setNombreSorteo(e.target.value)}\n          placeholder=\"Nombre del sorteo\"\n        />\n      </div>\n      <div className=\"sorteo-section\">\n        <label>Descripción:</label>\n        <input\n          type=\"text\"\n          value={descripcion}\n          onChange={(e) => setDescripcion(e.target.value)}\n          placeholder=\"Descripción del sorteo\"\n        />\n      </div>\n      <hr />\n      {/* Filtros */}\n      <div className=\"sorteo-section\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={usarFiltros}\n            onChange={() => setUsarFiltros(!usarFiltros)}\n          />\n          ¿Aplicar filtros de provincia/localidad?\n        </label>\n      </div>\n      {usarFiltros && (\n        <>\n          <div className=\"sorteo-section\">\n            <label>Provincia:</label>\n            <select\n              value={provinciaSeleccionada}\n              onChange={(e) => setProvinciaSeleccionada(e.target.value)}\n            >\n              <option value=\"\">-- Seleccionar provincia --</option>\n              {provincias.map((prov, idx) => (\n                <option key={idx} value={prov}>{prov}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"sorteo-section\">\n            <label>Localidad:</label>\n            <select\n              value={localidadSeleccionada}\n              onChange={(e) => setLocalidadSeleccionada(e.target.value)}\n              disabled={!provinciaSeleccionada}\n            >\n              <option value=\"\">-- Seleccionar localidad --</option>\n              {localidades.map((loc, idx) => (\n                <option key={idx} value={loc}>{loc}</option>\n              ))}\n            </select>\n          </div>\n        </>\n      )}\n      <hr />\n      {/* Agregar Premios */}\n      <h3>Agregar Premios al Sorteo</h3>\n      <div className=\"sorteo-section\">\n        <label>Selecciona un premio:</label>\n        <select\n          value={selectedPremioId}\n          onChange={(e) => setSelectedPremioId(e.target.value)}\n        >\n          <option value=\"\">-- Seleccionar premio --</option>\n          {availablePremios.map(premio => (\n            <option key={premio.id} value={premio.id}>\n              {premio.nombre} (Stock: {premio.stock})\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          placeholder=\"Cantidad\"\n          value={selectedPremioCantidad}\n          onChange={(e) => setSelectedPremioCantidad(Number(e.target.value))}\n          min=\"1\"\n          style={{ marginLeft: '10px', width: '60px' }}\n        />\n        <button onClick={agregarPremioAlSorteo} style={{ marginLeft: '10px' }}>\n          Agregar Premio\n        </button>\n      </div>\n      {/* Lista de premios agregados (con drag & drop) */}\n      {items.length > 0 && (\n        <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd} sensors={sensors}>\n          <SortableContext items={items.map(item => item.id)} strategy={verticalListSortingStrategy}>\n            <ul className=\"sorteo-list\">\n              {items.map((item, index) => (\n                <SortableItem key={item.id} id={item.id} nombre_item={item.nombre_item} cantidad={item.cantidad} index={index} />\n              ))}\n            </ul>\n          </SortableContext>\n        </DndContext>\n      )}\n      {/* Lista de premios con opción de eliminar */}\n      {items.length > 0 && (\n        <div className=\"sorteo-section\">\n          <h3>Lista de Premios en el Sorteo</h3>\n          <ul className=\"sorteo-list\">\n            {items.map(item => (\n              <li key={item.id} className=\"sorteo-item\">\n                {item.nombre_item} - Cantidad: {item.cantidad}\n                <button onClick={() => eliminarPremioDelSorteo(item.id)} className=\"eliminar-btn\">\n                  Eliminar\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      <hr />\n      {/* Botón para realizar sorteo */}\n      <div className=\"sorteo-section\">\n        <button onClick={handleSortear} className=\"sortear-btn\" disabled={cargando}>\n          {cargando ? <ClipLoader size={20} color=\"#ffffff\" /> : 'Sortear'}\n        </button>\n      </div>\n      {/* Mostrar resultado */}\n      {resultado && (\n        <div className=\"sorteo-result\">\n          <h2>Resultado del Sorteo</h2>\n          <p>ID: {resultado.sorteo_id} - Nombre: {resultado.nombre_sorteo}</p>\n          {resultado.items && resultado.items.length > 0 ? (\n            <ul>\n              {resultado.items.map((itemObj, i) => (\n                <li key={i}>\n                  <strong>{itemObj.orden_item}° Premio:</strong> {itemObj.nombre_item}\n                  <ul>\n                    {itemObj.ganadores.map((ganador, j) => (\n                      <li key={j}>\n                        Ganador: {ganador.nombre} {ganador.apellido} ({ganador.email})\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>Sin items en la respuesta.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Sorteo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}