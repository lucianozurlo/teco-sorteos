{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/SORTEO/sorteo_project/sorteo-frontend/src/components/Sorteo.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// sorteo-frontend/src/components/Sorteo.js\n\nimport React, { useState, useEffect } from 'react';\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { toast } from 'react-toastify';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport './Sorteo.css'; // Asegúrate de tener estilos para una mejor apariencia\n\n// Componente para cada Item Ordenable\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SortableItem(props) {\n  _s();\n  const {\n    id,\n    nombre_item,\n    cantidad,\n    index\n  } = props;\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id: id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n    padding: '8px',\n    marginBottom: '5px',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n    backgroundColor: '#fff',\n    cursor: 'grab'\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    ref: setNodeRef,\n    style: style,\n    ...attributes,\n    ...listeners,\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [index + 1, \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), \" \", nombre_item, \" - Cantidad: \", cantidad]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(SortableItem, \"9J/a3p2iAf7PAeqkD/B/H2PQwgk=\", false, function () {\n  return [useSortable];\n});\n_c = SortableItem;\nfunction Sorteo() {\n  _s2();\n  // 1) Campos básicos del sorteo\n  const [nombreSorteo, setNombreSorteo] = useState('');\n  const [descripcion, setDescripcion] = useState('');\n\n  // 2) Filtros\n  const [usarFiltros, setUsarFiltros] = useState(false);\n  const [provincias, setProvincias] = useState([]);\n  const [provinciaSeleccionada, setProvinciaSeleccionada] = useState('');\n  const [localidades, setLocalidades] = useState([]);\n  const [localidadSeleccionada, setLocalidadSeleccionada] = useState('');\n\n  // 3) Items (premios) con drag & drop\n  // Estructura: [{ id: number, nombre_item: string, cantidad: number }, ...]\n  const [items, setItems] = useState([]);\n  const [availablePremios, setAvailablePremios] = useState([]);\n  const [selectedPremioId, setSelectedPremioId] = useState('');\n  const [selectedPremioCantidad, setSelectedPremioCantidad] = useState(1);\n\n  // 4) Resultado del sorteo\n  const [resultado, setResultado] = useState(null);\n\n  // 5) Indicador de carga\n  const [cargando, setCargando] = useState(false);\n\n  // Sensores para dnd-kit\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor));\n\n  //------------------------------------------------------------\n  // Cargar listado de provincias cuando se habilitan filtros\n  //------------------------------------------------------------\n  useEffect(() => {\n    if (usarFiltros) {\n      fetch('http://127.0.0.1:8000/api/provincias/').then(res => res.json()).then(data => setProvincias(data)).catch(err => {\n        console.error(err);\n        toast.error('Error al cargar provincias.');\n      });\n    } else {\n      // Si no usamos filtros, limpiamos\n      setProvincias([]);\n      setProvinciaSeleccionada('');\n      setLocalidades([]);\n      setLocalidadSeleccionada('');\n    }\n  }, [usarFiltros]);\n\n  //------------------------------------------------------------\n  // Cargar listado de localidades cuando cambia provincia\n  //------------------------------------------------------------\n  useEffect(() => {\n    if (usarFiltros && provinciaSeleccionada) {\n      fetch(`http://127.0.0.1:8000/api/localidades/?provincia=${provinciaSeleccionada}`).then(res => res.json()).then(data => setLocalidades(data)).catch(err => {\n        console.error(err);\n        toast.error('Error al cargar localidades.');\n      });\n    } else {\n      setLocalidades([]);\n      setLocalidadSeleccionada('');\n    }\n  }, [usarFiltros, provinciaSeleccionada]);\n\n  //------------------------------------------------------------\n  // Cargar listado de premios disponibles\n  //------------------------------------------------------------\n  useEffect(() => {\n    fetchAvailablePremios();\n  }, []);\n  const fetchAvailablePremios = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/premios/');\n      const data = await response.json();\n      // Filtrar premios con stock > 0\n      const available = data.filter(p => p.stock > 0);\n      setAvailablePremios(available);\n    } catch (error) {\n      console.error('Error al obtener los premios:', error);\n      toast.error('Error al obtener los premios.');\n    }\n  };\n\n  //------------------------------------------------------------\n  // Agregar un premio seleccionado al sorteo\n  //------------------------------------------------------------\n  const agregarPremioAlSorteo = () => {\n    if (!selectedPremioId) {\n      toast.error('Por favor, selecciona un premio.');\n      return;\n    }\n    const premio = availablePremios.find(p => p.id === parseInt(selectedPremioId));\n    if (!premio) {\n      toast.error('Premio no encontrado.');\n      return;\n    }\n    if (selectedPremioCantidad < 1) {\n      toast.error('La cantidad debe ser al menos 1.');\n      return;\n    }\n    if (selectedPremioCantidad > premio.stock) {\n      toast.error(`No hay suficiente stock para el premio ${premio.nombre}. Stock disponible: ${premio.stock}`);\n      return;\n    }\n\n    // Agregar al sorteo\n    setItems([...items, {\n      id: premio.id,\n      nombre_item: premio.nombre,\n      cantidad: selectedPremioCantidad\n    }]);\n\n    // Reducir el stock en la lista disponible\n    setAvailablePremios(availablePremios.filter(p => p.id !== premio.id));\n\n    // Reset selection\n    setSelectedPremioId('');\n    setSelectedPremioCantidad(1);\n    toast.success(`Premio \"${premio.nombre}\" agregado al sorteo.`);\n  };\n\n  //------------------------------------------------------------\n  // Eliminar un premio del sorteo\n  //------------------------------------------------------------\n  const eliminarPremioDelSorteo = id => {\n    const premio = items.find(p => p.id === id);\n    if (!premio) return;\n\n    // Eliminar del sorteo\n    setItems(items.filter(p => p.id !== id));\n\n    // Agregar de vuelta al disponible con la cantidad previamente asignada\n    setAvailablePremios([...availablePremios, {\n      id: premio.id,\n      nombre: premio.nombre_item,\n      stock: premio.cantidad // Asume que el stock disponible se incrementa en la cantidad eliminada\n    }]);\n    toast.info(`Premio \"${premio.nombre_item}\" eliminado del sorteo.`);\n  };\n\n  //------------------------------------------------------------\n  // Manejar el final del Drag & Drop\n  //------------------------------------------------------------\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (active.id !== over.id) {\n      const oldIndex = items.findIndex(item => item.id === active.id);\n      const newIndex = items.findIndex(item => item.id === over.id);\n      setItems(arrayMove(items, oldIndex, newIndex));\n    }\n  };\n\n  //------------------------------------------------------------\n  // Realizar sorteo (POST a /api/sortear/)\n  //------------------------------------------------------------\n  const handleSortear = async () => {\n    // Validar que haya al menos un premio\n    if (items.length === 0) {\n      toast.error('Por favor, agrega al menos un premio para sortear.');\n      return;\n    }\n\n    // Opcional: Confirmar con el usuario\n    if (!window.confirm(`Realizar sorteo con ${items.length} premios.`)) {\n      return;\n    }\n\n    // Construimos el array de premios con orden y cantidad\n    const premiosConOrden = items.map((it, index) => ({\n      premio_id: it.id,\n      // ID del premio\n      orden_item: index + 1,\n      // 1°, 2°, etc.\n      cantidad: it.cantidad\n    }));\n    const payload = {\n      nombre: nombreSorteo,\n      descripcion: descripcion,\n      premios: premiosConOrden // array de objetos con premio_id, orden_item y cantidad\n    };\n\n    // Si habilitamos filtros, agregamos\n    if (usarFiltros) {\n      payload.provincia = provinciaSeleccionada;\n      payload.localidad = localidadSeleccionada;\n    }\n    setCargando(true);\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/sortear/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setResultado(data);\n        // Refresh available premios in case stock has changed\n        fetchAvailablePremios();\n        // Reset the sorteo form\n        setNombreSorteo('');\n        setDescripcion('');\n        setItems([]);\n        toast.success('Sorteo realizado exitosamente.');\n      } else {\n        toast.error(data.error || 'Error al sortear');\n        setResultado(null);\n      }\n    } catch (err) {\n      console.error(err);\n      toast.error('Error de conexión');\n      setResultado(null);\n    } finally {\n      setCargando(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sorteo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Realizar Sorteo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorteo-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nombre del sorteo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nombreSorteo,\n        onChange: e => setNombreSorteo(e.target.value),\n        placeholder: \"Nombre del sorteo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorteo-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descripci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: descripcion,\n        onChange: e => setDescripcion(e.target.value),\n        placeholder: \"Descripci\\xF3n del sorteo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorteo-section\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: usarFiltros,\n          onChange: () => setUsarFiltros(!usarFiltros)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), \"\\xBFAplicar filtros de provincia/localidad?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), usarFiltros && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sorteo-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Provincia:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: provinciaSeleccionada,\n          onChange: e => setProvinciaSeleccionada(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Seleccionar provincia --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), provincias.map((prov, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: prov,\n            children: prov\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sorteo-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Localidad:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: localidadSeleccionada,\n          onChange: e => setLocalidadSeleccionada(e.target.value),\n          disabled: !provinciaSeleccionada,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Seleccionar localidad --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), localidades.map((loc, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: loc,\n            children: loc\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Agregar Premios al Sorteo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorteo-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Selecciona un premio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedPremioId,\n        onChange: e => setSelectedPremioId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Seleccionar premio --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), availablePremios.map(premio => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: premio.id,\n          children: [premio.nombre, \" (Stock: \", premio.stock, \")\"]\n        }, premio.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Cantidad\",\n        value: selectedPremioCantidad,\n        onChange: e => setSelectedPremioCantidad(Number(e.target.value)),\n        min: \"1\",\n        style: {\n          marginLeft: '10px',\n          width: '60px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: agregarPremioAlSorteo,\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Agregar Premio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), items.length > 0 && /*#__PURE__*/_jsxDEV(DndContext, {\n      collisionDetection: closestCenter,\n      onDragEnd: handleDragEnd,\n      sensors: sensors,\n      children: /*#__PURE__*/_jsxDEV(SortableContext, {\n        items: items.map(item => item.id),\n        strategy: verticalListSortingStrategy,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"sorteo-list\",\n          children: items.map((item, index) => /*#__PURE__*/_jsxDEV(SortableItem, {\n            id: item.id,\n            nombre_item: item.nombre_item,\n            cantidad: item.cantidad,\n            index: index\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this), items.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorteo-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Lista de Premios en el Sorteo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"sorteo-list\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"sorteo-item\",\n          children: [item.nombre_item, \" - Cantidad: \", item.cantidad, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => eliminarPremioDelSorteo(item.id),\n            className: \"eliminar-btn\",\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorteo-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortear,\n        className: \"sortear-btn\",\n        disabled: cargando,\n        children: cargando ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n          size: 20,\n          color: \"#ffffff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 23\n        }, this) : 'Sortear'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), resultado && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorteo-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Resultado del Sorteo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", resultado.sorteo_id, \" - Nombre: \", resultado.nombre_sorteo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this), resultado.items && resultado.items.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: resultado.items.map((itemObj, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [itemObj.orden_item, \"\\xB0 Premio:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 19\n          }, this), \" \", itemObj.nombre_item, /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: itemObj.ganadores.map((ganador, j) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Ganador: \", ganador.nombre, \" \", ganador.apellido, \" (\", ganador.email, \")\"]\n            }, j, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sin items en la respuesta.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n}\n_s2(Sorteo, \"oM7I1QLTwQ9ZtuepicOEHpTJSBw=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c2 = Sorteo;\nexport default Sorteo;\nvar _c, _c2;\n$RefreshReg$(_c, \"SortableItem\");\n$RefreshReg$(_c2, \"Sorteo\");","map":{"version":3,"names":["React","useState","useEffect","DndContext","closestCenter","KeyboardSensor","PointerSensor","useSensor","useSensors","arrayMove","SortableContext","useSortable","verticalListSortingStrategy","CSS","toast","ClipLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","SortableItem","props","_s","id","nombre_item","cantidad","index","attributes","listeners","setNodeRef","transform","transition","isDragging","style","Transform","toString","opacity","padding","marginBottom","border","borderRadius","backgroundColor","cursor","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Sorteo","_s2","nombreSorteo","setNombreSorteo","descripcion","setDescripcion","usarFiltros","setUsarFiltros","provincias","setProvincias","provinciaSeleccionada","setProvinciaSeleccionada","localidades","setLocalidades","localidadSeleccionada","setLocalidadSeleccionada","items","setItems","availablePremios","setAvailablePremios","selectedPremioId","setSelectedPremioId","selectedPremioCantidad","setSelectedPremioCantidad","resultado","setResultado","cargando","setCargando","sensors","fetch","then","res","json","data","catch","err","console","error","fetchAvailablePremios","response","available","filter","p","stock","agregarPremioAlSorteo","premio","find","parseInt","nombre","success","eliminarPremioDelSorteo","info","handleDragEnd","event","active","over","oldIndex","findIndex","item","newIndex","handleSortear","length","window","confirm","premiosConOrden","map","it","premio_id","orden_item","payload","premios","provincia","localidad","method","headers","body","JSON","stringify","ok","className","type","value","onChange","e","target","placeholder","checked","prov","idx","disabled","loc","Number","min","marginLeft","width","onClick","collisionDetection","onDragEnd","strategy","size","color","sorteo_id","nombre_sorteo","itemObj","i","ganadores","ganador","j","apellido","email","_c2","$RefreshReg$"],"sources":["/Users/luciano/Desktop/SORTEO/sorteo_project/sorteo-frontend/src/components/Sorteo.js"],"sourcesContent":["// sorteo-frontend/src/components/Sorteo.js\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  useSortable,\n  verticalListSortingStrategy\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { toast } from 'react-toastify';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport './Sorteo.css'; // Asegúrate de tener estilos para una mejor apariencia\n\n// Componente para cada Item Ordenable\nfunction SortableItem(props) {\n  const { id, nombre_item, cantidad, index } = props;\n\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({ id: id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n    padding: '8px',\n    marginBottom: '5px',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n    backgroundColor: '#fff',\n    cursor: 'grab'\n  };\n\n  return (\n    <li ref={setNodeRef} style={style} {...attributes} {...listeners}>\n      <strong>{index + 1}°</strong> {nombre_item} - Cantidad: {cantidad}\n    </li>\n  );\n}\n\nfunction Sorteo() {\n  // 1) Campos básicos del sorteo\n  const [nombreSorteo, setNombreSorteo] = useState('');\n  const [descripcion, setDescripcion] = useState('');\n\n  // 2) Filtros\n  const [usarFiltros, setUsarFiltros] = useState(false);\n  const [provincias, setProvincias] = useState([]);\n  const [provinciaSeleccionada, setProvinciaSeleccionada] = useState('');\n  const [localidades, setLocalidades] = useState([]);\n  const [localidadSeleccionada, setLocalidadSeleccionada] = useState('');\n\n  // 3) Items (premios) con drag & drop\n  // Estructura: [{ id: number, nombre_item: string, cantidad: number }, ...]\n  const [items, setItems] = useState([]);\n  const [availablePremios, setAvailablePremios] = useState([]);\n  const [selectedPremioId, setSelectedPremioId] = useState('');\n  const [selectedPremioCantidad, setSelectedPremioCantidad] = useState(1);\n\n  // 4) Resultado del sorteo\n  const [resultado, setResultado] = useState(null);\n\n  // 5) Indicador de carga\n  const [cargando, setCargando] = useState(false);\n\n  // Sensores para dnd-kit\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor)\n  );\n\n  //------------------------------------------------------------\n  // Cargar listado de provincias cuando se habilitan filtros\n  //------------------------------------------------------------\n  useEffect(() => {\n    if (usarFiltros) {\n      fetch('http://127.0.0.1:8000/api/provincias/')\n        .then(res => res.json())\n        .then(data => setProvincias(data))\n        .catch(err => {\n          console.error(err);\n          toast.error('Error al cargar provincias.');\n        });\n    } else {\n      // Si no usamos filtros, limpiamos\n      setProvincias([]);\n      setProvinciaSeleccionada('');\n      setLocalidades([]);\n      setLocalidadSeleccionada('');\n    }\n  }, [usarFiltros]);\n\n  //------------------------------------------------------------\n  // Cargar listado de localidades cuando cambia provincia\n  //------------------------------------------------------------\n  useEffect(() => {\n    if (usarFiltros && provinciaSeleccionada) {\n      fetch(`http://127.0.0.1:8000/api/localidades/?provincia=${provinciaSeleccionada}`)\n        .then(res => res.json())\n        .then(data => setLocalidades(data))\n        .catch(err => {\n          console.error(err);\n          toast.error('Error al cargar localidades.');\n        });\n    } else {\n      setLocalidades([]);\n      setLocalidadSeleccionada('');\n    }\n  }, [usarFiltros, provinciaSeleccionada]);\n\n  //------------------------------------------------------------\n  // Cargar listado de premios disponibles\n  //------------------------------------------------------------\n  useEffect(() => {\n    fetchAvailablePremios();\n  }, []);\n\n  const fetchAvailablePremios = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/premios/');\n      const data = await response.json();\n      // Filtrar premios con stock > 0\n      const available = data.filter(p => p.stock > 0);\n      setAvailablePremios(available);\n    } catch (error) {\n      console.error('Error al obtener los premios:', error);\n      toast.error('Error al obtener los premios.');\n    }\n  };\n\n  //------------------------------------------------------------\n  // Agregar un premio seleccionado al sorteo\n  //------------------------------------------------------------\n  const agregarPremioAlSorteo = () => {\n    if (!selectedPremioId) {\n      toast.error('Por favor, selecciona un premio.');\n      return;\n    }\n\n    const premio = availablePremios.find(p => p.id === parseInt(selectedPremioId));\n    if (!premio) {\n      toast.error('Premio no encontrado.');\n      return;\n    }\n\n    if (selectedPremioCantidad < 1) {\n      toast.error('La cantidad debe ser al menos 1.');\n      return;\n    }\n\n    if (selectedPremioCantidad > premio.stock) {\n      toast.error(`No hay suficiente stock para el premio ${premio.nombre}. Stock disponible: ${premio.stock}`);\n      return;\n    }\n\n    // Agregar al sorteo\n    setItems([...items, {\n      id: premio.id,\n      nombre_item: premio.nombre,\n      cantidad: selectedPremioCantidad\n    }]);\n\n    // Reducir el stock en la lista disponible\n    setAvailablePremios(availablePremios.filter(p => p.id !== premio.id));\n\n    // Reset selection\n    setSelectedPremioId('');\n    setSelectedPremioCantidad(1);\n\n    toast.success(`Premio \"${premio.nombre}\" agregado al sorteo.`);\n  };\n\n  //------------------------------------------------------------\n  // Eliminar un premio del sorteo\n  //------------------------------------------------------------\n  const eliminarPremioDelSorteo = (id) => {\n    const premio = items.find(p => p.id === id);\n    if (!premio) return;\n\n    // Eliminar del sorteo\n    setItems(items.filter(p => p.id !== id));\n\n    // Agregar de vuelta al disponible con la cantidad previamente asignada\n    setAvailablePremios([...availablePremios, {\n      id: premio.id,\n      nombre: premio.nombre_item,\n      stock: premio.cantidad // Asume que el stock disponible se incrementa en la cantidad eliminada\n    }]);\n\n    toast.info(`Premio \"${premio.nombre_item}\" eliminado del sorteo.`);\n  };\n\n  //------------------------------------------------------------\n  // Manejar el final del Drag & Drop\n  //------------------------------------------------------------\n  const handleDragEnd = (event) => {\n    const { active, over } = event;\n\n    if (active.id !== over.id) {\n      const oldIndex = items.findIndex(item => item.id === active.id);\n      const newIndex = items.findIndex(item => item.id === over.id);\n      setItems(arrayMove(items, oldIndex, newIndex));\n    }\n  };\n\n  //------------------------------------------------------------\n  // Realizar sorteo (POST a /api/sortear/)\n  //------------------------------------------------------------\n  const handleSortear = async () => {\n    // Validar que haya al menos un premio\n    if (items.length === 0) {\n      toast.error('Por favor, agrega al menos un premio para sortear.');\n      return;\n    }\n\n    // Opcional: Confirmar con el usuario\n    if (!window.confirm(`Realizar sorteo con ${items.length} premios.`)) {\n      return;\n    }\n\n    // Construimos el array de premios con orden y cantidad\n    const premiosConOrden = items.map((it, index) => ({\n      premio_id: it.id, // ID del premio\n      orden_item: index + 1, // 1°, 2°, etc.\n      cantidad: it.cantidad\n    }));\n\n    const payload = {\n      nombre: nombreSorteo,\n      descripcion: descripcion,\n      premios: premiosConOrden, // array de objetos con premio_id, orden_item y cantidad\n    };\n\n    // Si habilitamos filtros, agregamos\n    if (usarFiltros) {\n      payload.provincia = provinciaSeleccionada;\n      payload.localidad = localidadSeleccionada;\n    }\n\n    setCargando(true);\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/sortear/', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setResultado(data);\n        // Refresh available premios in case stock has changed\n        fetchAvailablePremios();\n        // Reset the sorteo form\n        setNombreSorteo('');\n        setDescripcion('');\n        setItems([]);\n        toast.success('Sorteo realizado exitosamente.');\n      } else {\n        toast.error(data.error || 'Error al sortear');\n        setResultado(null);\n      }\n    } catch (err) {\n      console.error(err);\n      toast.error('Error de conexión');\n      setResultado(null);\n    } finally {\n      setCargando(false);\n    }\n  };\n\n  return (\n    <div className=\"sorteo-container\">\n      <h1>Realizar Sorteo</h1>\n\n      {/* Datos del sorteo */}\n      <div className=\"sorteo-section\">\n        <label>Nombre del sorteo:</label>\n        <input\n          type=\"text\"\n          value={nombreSorteo}\n          onChange={(e) => setNombreSorteo(e.target.value)}\n          placeholder=\"Nombre del sorteo\"\n        />\n      </div>\n\n      <div className=\"sorteo-section\">\n        <label>Descripción:</label>\n        <input\n          type=\"text\"\n          value={descripcion}\n          onChange={(e) => setDescripcion(e.target.value)}\n          placeholder=\"Descripción del sorteo\"\n        />\n      </div>\n\n      <hr />\n\n      {/* Checkbox para habilitar filtros */}\n      <div className=\"sorteo-section\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={usarFiltros}\n            onChange={() => setUsarFiltros(!usarFiltros)}\n          />\n          ¿Aplicar filtros de provincia/localidad?\n        </label>\n      </div>\n\n      {usarFiltros && (\n        <>\n          <div className=\"sorteo-section\">\n            <label>Provincia:</label>\n            <select\n              value={provinciaSeleccionada}\n              onChange={(e) => setProvinciaSeleccionada(e.target.value)}\n            >\n              <option value=\"\">-- Seleccionar provincia --</option>\n              {provincias.map((prov, idx) => (\n                <option key={idx} value={prov}>\n                  {prov}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"sorteo-section\">\n            <label>Localidad:</label>\n            <select\n              value={localidadSeleccionada}\n              onChange={(e) => setLocalidadSeleccionada(e.target.value)}\n              disabled={!provinciaSeleccionada}\n            >\n              <option value=\"\">-- Seleccionar localidad --</option>\n              {localidades.map((loc, idx) => (\n                <option key={idx} value={loc}>\n                  {loc}\n                </option>\n              ))}\n            </select>\n          </div>\n        </>\n      )}\n\n      <hr />\n\n      {/* Agregar Premios al Sorteo */}\n      <h3>Agregar Premios al Sorteo</h3>\n      <div className=\"sorteo-section\">\n        <label>Selecciona un premio:</label>\n        <select\n          value={selectedPremioId}\n          onChange={(e) => setSelectedPremioId(e.target.value)}\n        >\n          <option value=\"\">-- Seleccionar premio --</option>\n          {availablePremios.map(premio => (\n            <option key={premio.id} value={premio.id}>\n              {premio.nombre} (Stock: {premio.stock})\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          placeholder=\"Cantidad\"\n          value={selectedPremioCantidad}\n          onChange={(e) => setSelectedPremioCantidad(Number(e.target.value))}\n          min=\"1\"\n          style={{ marginLeft: '10px', width: '60px' }}\n        />\n        <button onClick={agregarPremioAlSorteo} style={{ marginLeft: '10px' }}>Agregar Premio</button>\n      </div>\n\n      {/* Lista de Premios en el Sorteo con Drag & Drop */}\n      {items.length > 0 && (\n        <DndContext\n          collisionDetection={closestCenter}\n          onDragEnd={handleDragEnd}\n          sensors={sensors}\n        >\n          <SortableContext\n            items={items.map(item => item.id)}\n            strategy={verticalListSortingStrategy}\n          >\n            <ul className=\"sorteo-list\">\n              {items.map((item, index) => (\n                <SortableItem\n                  key={item.id}\n                  id={item.id}\n                  nombre_item={item.nombre_item}\n                  cantidad={item.cantidad}\n                  index={index}\n                />\n              ))}\n            </ul>\n          </SortableContext>\n        </DndContext>\n      )}\n\n      {/* Lista de Premios en el Sorteo con Opciones para Eliminar */}\n      {items.length > 0 && (\n        <div className=\"sorteo-section\">\n          <h3>Lista de Premios en el Sorteo</h3>\n          <ul className=\"sorteo-list\">\n            {items.map(item => (\n              <li key={item.id} className=\"sorteo-item\">\n                {item.nombre_item} - Cantidad: {item.cantidad}\n                <button onClick={() => eliminarPremioDelSorteo(item.id)} className=\"eliminar-btn\">Eliminar</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      <hr />\n\n      {/* Botón para Realizar el Sorteo */}\n      <div className=\"sorteo-section\">\n        <button onClick={handleSortear} className=\"sortear-btn\" disabled={cargando}>\n          {cargando ? <ClipLoader size={20} color=\"#ffffff\" /> : 'Sortear'}\n        </button>\n      </div>\n\n      {/* Resultado del Sorteo */}\n      {resultado && (\n        <div className=\"sorteo-result\">\n          <h2>Resultado del Sorteo</h2>\n          <p>ID: {resultado.sorteo_id} - Nombre: {resultado.nombre_sorteo}</p>\n\n          {resultado.items && resultado.items.length > 0 ? (\n            <ul>\n              {resultado.items.map((itemObj, i) => (\n                <li key={i}>\n                  <strong>{itemObj.orden_item}° Premio:</strong> {itemObj.nombre_item}\n                  <ul>\n                    {itemObj.ganadores.map((ganador, j) => (\n                      <li key={j}>\n                        Ganador: {ganador.nombre} {ganador.apellido} ({ganador.email})\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>Sin items en la respuesta.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Sorteo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}