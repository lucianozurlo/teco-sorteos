{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/SORTEO/sorteo_project/sorteo-frontend/src/components/UploadCSV.js\",\n  _s = $RefreshSig$();\n// sorteo-frontend/src/components/UploadCSV.js\n\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { toast } from 'react-toastify';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport './UploadCSV.css'; // Asegúrate de crear este archivo para estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadCSV() {\n  _s();\n  const [filesUsuarios, setFilesUsuarios] = useState(null);\n  const [filesListaNegra, setFilesListaNegra] = useState(null);\n  const [mensaje, setMensaje] = useState('');\n  const [cargando, setCargando] = useState(false);\n  const onDropUsuarios = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type === 'text/csv') {\n      setFilesUsuarios(file);\n      toast.success(`Archivo de usuarios \"${file.name}\" cargado correctamente.`);\n    } else {\n      toast.error('Por favor, sube un archivo CSV válido para usuarios.');\n    }\n  }, []);\n  const onDropListaNegra = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type === 'text/csv') {\n      setFilesListaNegra(file);\n      toast.success(`Archivo de lista negra \"${file.name}\" cargado correctamente.`);\n    } else {\n      toast.error('Por favor, sube un archivo CSV válido para lista negra.');\n    }\n  }, []);\n  const {\n    getRootProps: getRootPropsUsuarios,\n    getInputProps: getInputPropsUsuarios,\n    isDragActive: isDragActiveUsuarios\n  } = useDropzone({\n    onDrop: onDropUsuarios,\n    accept: {\n      'text/csv': ['.csv']\n    }\n  });\n  const {\n    getRootProps: getRootPropsListaNegra,\n    getInputProps: getInputPropsListaNegra,\n    isDragActive: isDragActiveListaNegra\n  } = useDropzone({\n    onDrop: onDropListaNegra,\n    accept: {\n      'text/csv': ['.csv']\n    }\n  });\n  const handleUpload = async () => {\n    if (!filesUsuarios || !filesListaNegra) {\n      toast.error('Por favor, arrastra ambos archivos: usuarios y lista negra.');\n      return;\n    }\n    setCargando(true);\n    setMensaje('');\n    toast.info('Subiendo archivos CSV...');\n\n    // Preparar datos para enviar al backend Django\n    const formData = new FormData();\n    formData.append('usuarios', filesUsuarios);\n    formData.append('lista_negra', filesListaNegra);\n    try {\n      const response = await fetch('http://localhost:8000/api/upload_csv/', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data);\n      if (response.ok) {\n        setMensaje(`Éxito: ${data.mensaje}. Excluidos: ${data.excluidos} IDs.`);\n        setFilesUsuarios(null);\n        setFilesListaNegra(null);\n        toast.success(`${data.mensaje}. Excluidos: ${data.excluidos} IDs.`);\n      } else {\n        setMensaje(`Error: ${data.error}`);\n        toast.error(`Error: ${data.error}`);\n      }\n    } catch (err) {\n      console.error(err);\n      setMensaje('Error al subir CSV.');\n      toast.error('Error al subir CSV.');\n    } finally {\n      setCargando(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-csv-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subir Archivos CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootPropsUsuarios(),\n      className: `dropzone ${isDragActiveUsuarios ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputPropsUsuarios()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), filesUsuarios ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: filesUsuarios.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Arrastra aqu\\xED el CSV de usuarios o haz clic para seleccionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootPropsListaNegra(),\n      className: `dropzone ${isDragActiveListaNegra ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputPropsListaNegra()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), filesListaNegra ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: filesListaNegra.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Arrastra aqu\\xED el CSV de lista negra o haz clic para seleccionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      className: \"upload-button\",\n      disabled: cargando,\n      children: cargando ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n        size: 20,\n        color: \"#ffffff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this) : 'Subir CSV'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), mensaje && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mensaje\",\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadCSV, \"efcKxjheVjZxF5TGIb4d7LQbcjI=\", false, function () {\n  return [useDropzone, useDropzone];\n});\n_c = UploadCSV;\nexport default UploadCSV;\nvar _c;\n$RefreshReg$(_c, \"UploadCSV\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","toast","ClipLoader","jsxDEV","_jsxDEV","UploadCSV","_s","filesUsuarios","setFilesUsuarios","filesListaNegra","setFilesListaNegra","mensaje","setMensaje","cargando","setCargando","onDropUsuarios","acceptedFiles","file","type","success","name","error","onDropListaNegra","getRootProps","getRootPropsUsuarios","getInputProps","getInputPropsUsuarios","isDragActive","isDragActiveUsuarios","onDrop","accept","getRootPropsListaNegra","getInputPropsListaNegra","isDragActiveListaNegra","handleUpload","info","formData","FormData","append","response","fetch","method","body","data","json","console","log","ok","excluidos","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","size","color","_c","$RefreshReg$"],"sources":["/Users/luciano/Desktop/SORTEO/sorteo_project/sorteo-frontend/src/components/UploadCSV.js"],"sourcesContent":["// sorteo-frontend/src/components/UploadCSV.js\n\nimport React, {useCallback, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {toast} from 'react-toastify';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport './UploadCSV.css'; // Asegúrate de crear este archivo para estilos\n\nfunction UploadCSV () {\n  const [filesUsuarios, setFilesUsuarios] = useState (null);\n  const [filesListaNegra, setFilesListaNegra] = useState (null);\n  const [mensaje, setMensaje] = useState ('');\n  const [cargando, setCargando] = useState (false);\n\n  const onDropUsuarios = useCallback (acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type === 'text/csv') {\n      setFilesUsuarios (file);\n      toast.success (\n        `Archivo de usuarios \"${file.name}\" cargado correctamente.`\n      );\n    } else {\n      toast.error ('Por favor, sube un archivo CSV válido para usuarios.');\n    }\n  }, []);\n\n  const onDropListaNegra = useCallback (acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type === 'text/csv') {\n      setFilesListaNegra (file);\n      toast.success (\n        `Archivo de lista negra \"${file.name}\" cargado correctamente.`\n      );\n    } else {\n      toast.error ('Por favor, sube un archivo CSV válido para lista negra.');\n    }\n  }, []);\n\n  const {\n    getRootProps: getRootPropsUsuarios,\n    getInputProps: getInputPropsUsuarios,\n    isDragActive: isDragActiveUsuarios,\n  } = useDropzone ({onDrop: onDropUsuarios, accept: {'text/csv': ['.csv']}});\n\n  const {\n    getRootProps: getRootPropsListaNegra,\n    getInputProps: getInputPropsListaNegra,\n    isDragActive: isDragActiveListaNegra,\n  } = useDropzone ({onDrop: onDropListaNegra, accept: {'text/csv': ['.csv']}});\n\n  const handleUpload = async () => {\n    if (!filesUsuarios || !filesListaNegra) {\n      toast.error (\n        'Por favor, arrastra ambos archivos: usuarios y lista negra.'\n      );\n      return;\n    }\n\n    setCargando (true);\n    setMensaje ('');\n    toast.info ('Subiendo archivos CSV...');\n\n    // Preparar datos para enviar al backend Django\n    const formData = new FormData ();\n    formData.append ('usuarios', filesUsuarios);\n    formData.append ('lista_negra', filesListaNegra);\n\n    try {\n      const response = await fetch ('http://localhost:8000/api/upload_csv/', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json ();\n      console.log (data);\n      if (response.ok) {\n        setMensaje (\n          `Éxito: ${data.mensaje}. Excluidos: ${data.excluidos} IDs.`\n        );\n        setFilesUsuarios (null);\n        setFilesListaNegra (null);\n        toast.success (`${data.mensaje}. Excluidos: ${data.excluidos} IDs.`);\n      } else {\n        setMensaje (`Error: ${data.error}`);\n        toast.error (`Error: ${data.error}`);\n      }\n    } catch (err) {\n      console.error (err);\n      setMensaje ('Error al subir CSV.');\n      toast.error ('Error al subir CSV.');\n    } finally {\n      setCargando (false);\n    }\n  };\n\n  return (\n    <div className=\"upload-csv-container\">\n      <h2>Subir Archivos CSV</h2>\n\n      {/* Dropzone para Usuarios */}\n      <div\n        {...getRootPropsUsuarios ()}\n        className={`dropzone ${isDragActiveUsuarios ? 'active' : ''}`}\n      >\n        <input {...getInputPropsUsuarios ()} />\n        {filesUsuarios\n          ? <p>{filesUsuarios.name}</p>\n          : <p>Arrastra aquí el CSV de usuarios o haz clic para seleccionar</p>}\n      </div>\n\n      {/* Dropzone para Lista Negra */}\n      <div\n        {...getRootPropsListaNegra ()}\n        className={`dropzone ${isDragActiveListaNegra ? 'active' : ''}`}\n      >\n        <input {...getInputPropsListaNegra ()} />\n        {filesListaNegra\n          ? <p>{filesListaNegra.name}</p>\n          : <p>\n              Arrastra aquí el CSV de lista negra o haz clic para seleccionar\n            </p>}\n      </div>\n\n      {/* Botón para Subir Archivos */}\n      <button\n        onClick={handleUpload}\n        className=\"upload-button\"\n        disabled={cargando}\n      >\n        {cargando ? <ClipLoader size={20} color=\"#ffffff\" /> : 'Subir CSV'}\n      </button>\n\n      {/* Mensaje de Resultado */}\n      {mensaje && <p className=\"mensaje\">{mensaje}</p>}\n    </div>\n  );\n}\n\nexport default UploadCSV;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}