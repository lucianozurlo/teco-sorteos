{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/teco-sorteos/sorteo-frontend/src/components/Sorteo.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// sorteo-frontend/src/components/Sorteo.js\n\nimport React, { useState, useEffect } from 'react';\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { toast } from 'react-toastify';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport './Sorteo.css';\nimport { API_BASE_URL } from '../config';\n\n//\n// Componente para cada ítem ordenable\n//\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SortableItem(props) {\n  _s();\n  const {\n    id,\n    nombre_item,\n    cantidad,\n    index\n  } = props;\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n    padding: '8px',\n    marginBottom: '5px',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n    backgroundColor: '#fff',\n    cursor: 'grab'\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    ref: setNodeRef,\n    style: style,\n    ...attributes,\n    ...listeners,\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [index + 1, \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 2\n    }, this), \" \", nombre_item, \" - Cantidad: \", cantidad]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 1\n  }, this);\n}\n\n//\n// Componente Sorteo (sin WebSocket)\n//\n_s(SortableItem, \"wZ9LrlAdu45h+k5IBlwhyTPFbVs=\", false, function () {\n  return [useSortable];\n});\n_c = SortableItem;\nfunction Sorteo() {\n  _s2();\n  // 1) Campos básicos del sorteo\n  const [nombreSorteo, setNombreSorteo] = useState('');\n  const [descripcion, setDescripcion] = useState('');\n\n  // 2) Filtros\n  const [usarFiltros, setUsarFiltros] = useState(false);\n  const [provincias, setProvincias] = useState([]);\n  const [provinciaSeleccionada, setProvinciaSeleccionada] = useState('');\n  const [localidades, setLocalidades] = useState([]);\n  const [localidadSeleccionada, setLocalidadSeleccionada] = useState('');\n\n  // 3) Premios a sortear (con drag & drop)\n  // Cada ítem: { id, nombre_item, cantidad }\n  const [items, setItems] = useState([]);\n  const [availablePremios, setAvailablePremios] = useState([]);\n  const [selectedPremioId, setSelectedPremioId] = useState('');\n  const [selectedPremioCantidad, setSelectedPremioCantidad] = useState(1);\n\n  // 4) Resultado del sorteo\n  const [resultado, setResultado] = useState(null);\n\n  // 5) Indicador de carga\n  const [cargando, setCargando] = useState(false);\n\n  // Sensores para dnd-kit\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor));\n\n  // Cargar provincias (si se usan filtros)\n  useEffect(() => {\n    if (usarFiltros) {\n      fetch(`${API_BASE_URL}/api/provincias/`).then(res => res.json()).then(data => setProvincias(data)).catch(err => {\n        console.error(err);\n        toast.error('Error al cargar provincias.');\n      });\n    } else {\n      setProvincias([]);\n      setProvinciaSeleccionada('');\n      setLocalidades([]);\n      setLocalidadSeleccionada('');\n    }\n  }, [usarFiltros]);\n\n  // Cargar localidades cuando cambia provincia\n  useEffect(() => {\n    if (usarFiltros && provinciaSeleccionada) {\n      fetch(`${API_BASE_URL}/api/localidades/?provincia=${provinciaSeleccionada}`).then(res => res.json()).then(data => setLocalidades(data)).catch(err => {\n        console.error(err);\n        toast.error('Error al cargar localidades.');\n      });\n    } else {\n      setLocalidades([]);\n      setLocalidadSeleccionada('');\n    }\n  }, [usarFiltros, provinciaSeleccionada]);\n\n  // Cargar premios disponibles\n  useEffect(() => {\n    fetchAvailablePremios();\n  }, []);\n  const fetchAvailablePremios = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/premios/`);\n      const data = await response.json();\n      // Filtrar premios con stock > 0\n      const available = data.filter(p => p.stock > 0);\n      setAvailablePremios(available);\n    } catch (error) {\n      console.error('Error al obtener los premios:', error);\n      toast.error('Error al obtener los premios.');\n    }\n  };\n\n  // Agregar un premio seleccionado al sorteo\n  const agregarPremioAlSorteo = () => {\n    if (!selectedPremioId) {\n      toast.error('Por favor, seleccioná un premio.');\n      return;\n    }\n    const premio = availablePremios.find(p => p.id === parseInt(selectedPremioId));\n    if (!premio) {\n      toast.error('Premio no encontrado.');\n      return;\n    }\n    if (selectedPremioCantidad < 1) {\n      toast.error('La cantidad debe ser al menos 1.');\n      return;\n    }\n    if (selectedPremioCantidad > premio.stock) {\n      toast.error(`No hay suficiente stock para el premio ${premio.nombre}. Stock disponible: ${premio.stock}`);\n      return;\n    }\n    setItems([...items, {\n      id: premio.id,\n      nombre_item: premio.nombre,\n      cantidad: selectedPremioCantidad\n    }]);\n    // Remueve el premio de la lista disponible\n    setAvailablePremios(availablePremios.filter(p => p.id !== premio.id));\n    // Resetea la selección\n    setSelectedPremioId('');\n    setSelectedPremioCantidad(1);\n    toast.success(`Premio \"${premio.nombre}\" agregado al sorteo.`);\n  };\n\n  // Eliminar un premio del sorteo\n  const eliminarPremioDelSorteo = id => {\n    const premio = items.find(p => p.id === id);\n    if (!premio) return;\n    setItems(items.filter(p => p.id !== id));\n    // Reinserta el premio a la lista de disponibles (puedes ajustar la lógica de stock según sea necesario)\n    setAvailablePremios([...availablePremios, {\n      id: premio.id,\n      nombre: premio.nombre_item,\n      stock: premio.cantidad\n    }]);\n    toast.info(`Premio \"${premio.nombre_item}\" eliminado del sorteo.`);\n  };\n\n  // Manejar el fin del Drag & Drop\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (active.id !== over.id) {\n      const oldIndex = items.findIndex(item => item.id === active.id);\n      const newIndex = items.findIndex(item => item.id === over.id);\n      setItems(arrayMove(items, oldIndex, newIndex));\n    }\n  };\n\n  // Enviar la solicitud del sorteo (sin window.confirm)\n  const handleSortear = async () => {\n    if (items.length === 0) {\n      toast.error('Por favor, agregá al menos un premio para sortear.');\n      return;\n    }\n    // Se suma la cantidad de cada premio (ya viene en cada objeto)\n    const premiosConOrden = items.map((it, index) => ({\n      premio_id: it.id,\n      orden_item: index + 1,\n      cantidad: it.cantidad\n    }));\n    const payload = {\n      nombre: nombreSorteo,\n      descripcion: descripcion,\n      premios: premiosConOrden\n    };\n    if (usarFiltros) {\n      payload.provincia = provinciaSeleccionada;\n      payload.localidad = localidadSeleccionada;\n    }\n    console.log(\"Enviando solicitud con payload:\", payload);\n    setCargando(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/sortear/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      console.log(\"Respuesta del servidor:\", data);\n      if (response.ok) {\n        setResultado(data);\n        // Actualiza la lista de premios disponibles (por si el stock cambió)\n        fetchAvailablePremios();\n        setNombreSorteo('');\n        setDescripcion('');\n        setItems([]);\n        toast.success('Sorteo realizado exitosamente.');\n      } else {\n        toast.error(data.error || 'Error al sortear');\n        setResultado(null);\n      }\n    } catch (err) {\n      console.error(\"Error de conexión:\", err);\n      toast.error('Error de conexión');\n      setResultado(null);\n    } finally {\n      setCargando(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sorteo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Realizar Sorteo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorteo-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nombre del sorteo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nombreSorteo,\n        onChange: e => setNombreSorteo(e.target.value),\n        placeholder: \"Nombre del sorteo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorteo-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descripci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: descripcion,\n        onChange: e => setDescripcion(e.target.value),\n        placeholder: \"Descripci\\xF3n del sorteo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorteo-section\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: usarFiltros,\n          onChange: () => setUsarFiltros(!usarFiltros)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 3\n        }, this), \"\\xBFRestringir por provincia/localidad?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 2\n    }, this), usarFiltros && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sorteo-section d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"half\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Provincia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: provinciaSeleccionada,\n            onChange: e => setProvinciaSeleccionada(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Seleccionar provincia --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 5\n            }, this), provincias.map((prov, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: prov,\n              children: prov\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 5\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"half\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Localidad:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: localidadSeleccionada,\n            onChange: e => setLocalidadSeleccionada(e.target.value),\n            disabled: !provinciaSeleccionada,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Seleccionar localidad --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 5\n            }, this), localidades.map((loc, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: loc,\n              children: loc\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 5\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 6\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Agregar Premios al Sorteo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorteo-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Seleccion\\xE1 un premio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedPremioId,\n        onChange: e => setSelectedPremioId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Seleccionar premio --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 3\n        }, this), availablePremios.map(premio => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: premio.id,\n          children: [premio.nombre, \" (Stock: \", premio.stock, \")\"]\n        }, premio.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 3\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Cantidad\",\n        value: selectedPremioCantidad,\n        onChange: e => setSelectedPremioCantidad(Number(e.target.value)),\n        min: \"1\",\n        style: {\n          marginLeft: '10px',\n          width: '60px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: agregarPremioAlSorteo,\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Agregar Premio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 2\n    }, this), items.length > 0 && /*#__PURE__*/_jsxDEV(DndContext, {\n      collisionDetection: closestCenter,\n      onDragEnd: handleDragEnd,\n      sensors: sensors,\n      children: /*#__PURE__*/_jsxDEV(SortableContext, {\n        items: items.map(item => item.id),\n        strategy: verticalListSortingStrategy,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"sorteo-list\",\n          children: items.map((item, index) => /*#__PURE__*/_jsxDEV(SortableItem, {\n            id: item.id,\n            nombre_item: item.nombre_item,\n            cantidad: item.cantidad,\n            index: index\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 4\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 2\n    }, this), items.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorteo-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          marginTop: '40px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Lista de Premios para sortear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"sorteo-list\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"sorteo-item\",\n          children: [item.nombre_item, \" - Cantidad: \", item.cantidad, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => eliminarPremioDelSorteo(item.id),\n            className: \"eliminar\",\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 4\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 4\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortear\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortear,\n        className: \"ejecutar\",\n        disabled: cargando,\n        children: cargando ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n          size: 20,\n          color: \"#ffffff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }, this) : 'Sortear'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 2\n    }, this), resultado && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sorteo-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Resultado del Sorteo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", resultado.sorteo_id, \" - Nombre: \", resultado.nombre_sorteo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 3\n      }, this), resultado.items && resultado.items.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: resultado.items.map((itemObj, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [itemObj.orden_item, \"\\xB0 Premio:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 5\n          }, this), \" \", itemObj.nombre_item, /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: itemObj.ganadores.map((ganador, j) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Ganador: \", ganador.nombre, \" \", ganador.apellido, \" (\", ganador.email, \")\"]\n            }, j, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 6\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 5\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 4\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 3\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sin items en la respuesta.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 1\n  }, this);\n}\n_s2(Sorteo, \"oM7I1QLTwQ9ZtuepicOEHpTJSBw=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c2 = Sorteo;\nexport default Sorteo;\nvar _c, _c2;\n$RefreshReg$(_c, \"SortableItem\");\n$RefreshReg$(_c2, \"Sorteo\");","map":{"version":3,"names":["React","useState","useEffect","DndContext","closestCenter","KeyboardSensor","PointerSensor","useSensor","useSensors","arrayMove","SortableContext","useSortable","verticalListSortingStrategy","CSS","toast","ClipLoader","API_BASE_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","SortableItem","props","_s","id","nombre_item","cantidad","index","attributes","listeners","setNodeRef","transform","transition","isDragging","style","Transform","toString","opacity","padding","marginBottom","border","borderRadius","backgroundColor","cursor","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Sorteo","_s2","nombreSorteo","setNombreSorteo","descripcion","setDescripcion","usarFiltros","setUsarFiltros","provincias","setProvincias","provinciaSeleccionada","setProvinciaSeleccionada","localidades","setLocalidades","localidadSeleccionada","setLocalidadSeleccionada","items","setItems","availablePremios","setAvailablePremios","selectedPremioId","setSelectedPremioId","selectedPremioCantidad","setSelectedPremioCantidad","resultado","setResultado","cargando","setCargando","sensors","fetch","then","res","json","data","catch","err","console","error","fetchAvailablePremios","response","available","filter","p","stock","agregarPremioAlSorteo","premio","find","parseInt","nombre","success","eliminarPremioDelSorteo","info","handleDragEnd","event","active","over","oldIndex","findIndex","item","newIndex","handleSortear","length","premiosConOrden","map","it","premio_id","orden_item","payload","premios","provincia","localidad","log","method","headers","body","JSON","stringify","ok","className","type","value","onChange","e","target","placeholder","checked","prov","idx","disabled","loc","Number","min","marginLeft","width","onClick","collisionDetection","onDragEnd","strategy","marginTop","size","color","sorteo_id","nombre_sorteo","itemObj","i","ganadores","ganador","j","apellido","email","_c2","$RefreshReg$"],"sources":["/Users/luciano/Desktop/teco-sorteos/sorteo-frontend/src/components/Sorteo.js"],"sourcesContent":["// sorteo-frontend/src/components/Sorteo.js\n\nimport React, { useState, useEffect } from 'react';\nimport {\nDndContext,\nclosestCenter,\nKeyboardSensor,\nPointerSensor,\nuseSensor,\nuseSensors\n} from '@dnd-kit/core';\nimport {\narrayMove,\nSortableContext,\nuseSortable,\nverticalListSortingStrategy\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { toast } from 'react-toastify';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport './Sorteo.css';\nimport { API_BASE_URL } from '../config';\n\n//\n// Componente para cada ítem ordenable\n//\nfunction SortableItem(props) {\nconst { id, nombre_item, cantidad, index } = props;\nconst { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id });\nconst style = {\ntransform: CSS.Transform.toString(transform),\ntransition,\nopacity: isDragging ? 0.5 : 1,\npadding: '8px',\nmarginBottom: '5px',\nborder: '1px solid #ccc',\nborderRadius: '4px',\nbackgroundColor: '#fff',\ncursor: 'grab'\n};\n\nreturn (\n<li ref={setNodeRef} style={style} {...attributes} {...listeners}>\n\t<strong>{index + 1}°</strong> {nombre_item} - Cantidad: {cantidad}\n</li>\n);\n}\n\n//\n// Componente Sorteo (sin WebSocket)\n//\nfunction Sorteo() {\n// 1) Campos básicos del sorteo\nconst [nombreSorteo, setNombreSorteo] = useState('');\nconst [descripcion, setDescripcion] = useState('');\n\n// 2) Filtros\nconst [usarFiltros, setUsarFiltros] = useState(false);\nconst [provincias, setProvincias] = useState([]);\nconst [provinciaSeleccionada, setProvinciaSeleccionada] = useState('');\nconst [localidades, setLocalidades] = useState([]);\nconst [localidadSeleccionada, setLocalidadSeleccionada] = useState('');\n\n// 3) Premios a sortear (con drag & drop)\n// Cada ítem: { id, nombre_item, cantidad }\nconst [items, setItems] = useState([]);\nconst [availablePremios, setAvailablePremios] = useState([]);\nconst [selectedPremioId, setSelectedPremioId] = useState('');\nconst [selectedPremioCantidad, setSelectedPremioCantidad] = useState(1);\n\n// 4) Resultado del sorteo\nconst [resultado, setResultado] = useState(null);\n\n// 5) Indicador de carga\nconst [cargando, setCargando] = useState(false);\n\n// Sensores para dnd-kit\nconst sensors = useSensors(\nuseSensor(PointerSensor),\nuseSensor(KeyboardSensor)\n);\n\n// Cargar provincias (si se usan filtros)\nuseEffect(() => {\nif (usarFiltros) {\n\tfetch(`${API_BASE_URL}/api/provincias/`)\n\t.then(res => res.json())\n\t.then(data => setProvincias(data))\n\t.catch(err => {\n\t\tconsole.error(err);\n\t\ttoast.error('Error al cargar provincias.');\n\t});\n} else {\n\tsetProvincias([]);\n\tsetProvinciaSeleccionada('');\n\tsetLocalidades([]);\n\tsetLocalidadSeleccionada('');\n}\n}, [usarFiltros]);\n\n// Cargar localidades cuando cambia provincia\nuseEffect(() => {\nif (usarFiltros && provinciaSeleccionada) {\n\tfetch(`${API_BASE_URL}/api/localidades/?provincia=${provinciaSeleccionada}`)\n\t.then(res => res.json())\n\t.then(data => setLocalidades(data))\n\t.catch(err => {\n\t\tconsole.error(err);\n\t\ttoast.error('Error al cargar localidades.');\n\t});\n} else {\n\tsetLocalidades([]);\n\tsetLocalidadSeleccionada('');\n}\n}, [usarFiltros, provinciaSeleccionada]);\n\n// Cargar premios disponibles\nuseEffect(() => {\nfetchAvailablePremios();\n}, []);\n\nconst fetchAvailablePremios = async () => {\ntry {\n\tconst response = await fetch(`${API_BASE_URL}/api/premios/`);\n\tconst data = await response.json();\n\t// Filtrar premios con stock > 0\n\tconst available = data.filter(p => p.stock > 0);\n\tsetAvailablePremios(available);\n} catch (error) {\n\tconsole.error('Error al obtener los premios:', error);\n\ttoast.error('Error al obtener los premios.');\n}\n};\n\n// Agregar un premio seleccionado al sorteo\nconst agregarPremioAlSorteo = () => {\nif (!selectedPremioId) {\n\ttoast.error('Por favor, seleccioná un premio.');\n\treturn;\n}\nconst premio = availablePremios.find(p => p.id === parseInt(selectedPremioId));\nif (!premio) {\n\ttoast.error('Premio no encontrado.');\n\treturn;\n}\nif (selectedPremioCantidad < 1) {\n\ttoast.error('La cantidad debe ser al menos 1.');\n\treturn;\n}\nif (selectedPremioCantidad > premio.stock) {\n\ttoast.error(`No hay suficiente stock para el premio ${premio.nombre}. Stock disponible: ${premio.stock}`);\n\treturn;\n}\nsetItems([...items, {\n\tid: premio.id,\n\tnombre_item: premio.nombre,\n\tcantidad: selectedPremioCantidad\n}]);\n// Remueve el premio de la lista disponible\nsetAvailablePremios(availablePremios.filter(p => p.id !== premio.id));\n// Resetea la selección\nsetSelectedPremioId('');\nsetSelectedPremioCantidad(1);\ntoast.success(`Premio \"${premio.nombre}\" agregado al sorteo.`);\n};\n\n// Eliminar un premio del sorteo\nconst eliminarPremioDelSorteo = (id) => {\nconst premio = items.find(p => p.id === id);\nif (!premio) return;\nsetItems(items.filter(p => p.id !== id));\n// Reinserta el premio a la lista de disponibles (puedes ajustar la lógica de stock según sea necesario)\nsetAvailablePremios([...availablePremios, {\n\tid: premio.id,\n\tnombre: premio.nombre_item,\n\tstock: premio.cantidad\n}]);\ntoast.info(`Premio \"${premio.nombre_item}\" eliminado del sorteo.`);\n};\n\n// Manejar el fin del Drag & Drop\nconst handleDragEnd = (event) => {\nconst { active, over } = event;\nif (active.id !== over.id) {\n\tconst oldIndex = items.findIndex(item => item.id === active.id);\n\tconst newIndex = items.findIndex(item => item.id === over.id);\n\tsetItems(arrayMove(items, oldIndex, newIndex));\n}\n};\n\n// Enviar la solicitud del sorteo (sin window.confirm)\nconst handleSortear = async () => {\nif (items.length === 0) {\n\ttoast.error('Por favor, agregá al menos un premio para sortear.');\n\treturn;\n}\n// Se suma la cantidad de cada premio (ya viene en cada objeto)\nconst premiosConOrden = items.map((it, index) => ({\n\tpremio_id: it.id,\n\torden_item: index + 1,\n\tcantidad: it.cantidad\n}));\nconst payload = {\n\tnombre: nombreSorteo,\n\tdescripcion: descripcion,\n\tpremios: premiosConOrden\n};\nif (usarFiltros) {\n\tpayload.provincia = provinciaSeleccionada;\n\tpayload.localidad = localidadSeleccionada;\n}\nconsole.log(\"Enviando solicitud con payload:\", payload);\nsetCargando(true);\ntry {\n\tconst response = await fetch(`${API_BASE_URL}/api/sortear/`, {\n\tmethod: 'POST',\n\theaders: { 'Content-Type': 'application/json' },\n\tbody: JSON.stringify(payload),\n\t});\n\tconst data = await response.json();\n\tconsole.log(\"Respuesta del servidor:\", data);\n\tif (response.ok) {\n\tsetResultado(data);\n\t// Actualiza la lista de premios disponibles (por si el stock cambió)\n\tfetchAvailablePremios();\n\tsetNombreSorteo('');\n\tsetDescripcion('');\n\tsetItems([]);\n\ttoast.success('Sorteo realizado exitosamente.');\n\t} else {\n\ttoast.error(data.error || 'Error al sortear');\n\tsetResultado(null);\n\t}\n} catch (err) {\n\tconsole.error(\"Error de conexión:\", err);\n\ttoast.error('Error de conexión');\n\tsetResultado(null);\n} finally {\n\tsetCargando(false);\n}\n};\n\nreturn (\n<div className=\"sorteo-container\">\n\t<h1>Realizar Sorteo</h1>\n\t{/* Datos del sorteo */}\n\t<div className=\"sorteo-section\">\n\t<label>Nombre del sorteo:</label>\n\t<input\n\t\ttype=\"text\"\n\t\tvalue={nombreSorteo}\n\t\tonChange={(e) => setNombreSorteo(e.target.value)}\n\t\tplaceholder=\"Nombre del sorteo\"\n\t/>\n\t</div>\n\t<div className=\"sorteo-section\">\n\t<label>Descripción:</label>\n\t<input\n\t\ttype=\"text\"\n\t\tvalue={descripcion}\n\t\tonChange={(e) => setDescripcion(e.target.value)}\n\t\tplaceholder=\"Descripción del sorteo\"\n\t/>\n\t</div>\n\t<hr />\n\t{/* Filtros */}\n\t<div className=\"sorteo-section\">\n\t<label>\n\t\t<input\n\t\ttype=\"checkbox\"\n\t\tchecked={usarFiltros}\n\t\tonChange={() => setUsarFiltros(!usarFiltros)}\n\t\t/>\n\t\t¿Restringir por provincia/localidad?\n\t</label>\n\t</div>\n\t{usarFiltros && (\n\t<>\n\t    <div className=\"sorteo-section d-flex\">\n\t\t\t<div className=\"half\">\n\t\t\t<label>Provincia:</label>\n\t\t\t<select\n\t\t\t\tvalue={provinciaSeleccionada}\n\t\t\t\tonChange={(e) => setProvinciaSeleccionada(e.target.value)}\n\t\t\t>\n\t\t\t\t<option value=\"\">-- Seleccionar provincia --</option>\n\t\t\t\t{provincias.map((prov, idx) => (\n\t\t\t\t<option key={idx} value={prov}>{prov}</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div className=\"half\">\n\t\t\t<label>Localidad:</label>\n\t\t\t<select\n\t\t\t\tvalue={localidadSeleccionada}\n\t\t\t\tonChange={(e) => setLocalidadSeleccionada(e.target.value)}\n\t\t\t\tdisabled={!provinciaSeleccionada}\n\t\t\t>\n\t\t\t\t<option value=\"\">-- Seleccionar localidad --</option>\n\t\t\t\t{localidades.map((loc, idx) => (\n\t\t\t\t<option key={idx} value={loc}>{loc}</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t</>\n\t)}\n\t<hr />\n\t{/* Agregar Premios */}\n\t<h4>Agregar Premios al Sorteo</h4>\n\t<div className=\"sorteo-section\">\n\t<label>Seleccioná un premio:</label>\n\t<select\n\t\tvalue={selectedPremioId}\n\t\tonChange={(e) => setSelectedPremioId(e.target.value)}\n\t>\n\t\t<option value=\"\">-- Seleccionar premio --</option>\n\t\t{availablePremios.map(premio => (\n\t\t<option key={premio.id} value={premio.id}>\n\t\t\t{premio.nombre} (Stock: {premio.stock})\n\t\t</option>\n\t\t))}\n\t</select>\n\t<input\n\t\ttype=\"number\"\n\t\tplaceholder=\"Cantidad\"\n\t\tvalue={selectedPremioCantidad}\n\t\tonChange={(e) => setSelectedPremioCantidad(Number(e.target.value))}\n\t\tmin=\"1\"\n\t\tstyle={{ marginLeft: '10px', width: '60px' }}\n\t/>\n\t<button onClick={agregarPremioAlSorteo} style={{ marginLeft: '10px' }}>\n\t\tAgregar Premio\n\t</button>\n\t</div>\n\t{/* Lista de premios agregados (con drag & drop) */}\n\t{items.length > 0 && (\n\t<DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd} sensors={sensors}>\n\t\t<SortableContext items={items.map(item => item.id)} strategy={verticalListSortingStrategy}>\n\t\t<ul className=\"sorteo-list\">\n\t\t\t{items.map((item, index) => (\n\t\t\t<SortableItem key={item.id} id={item.id} nombre_item={item.nombre_item} cantidad={item.cantidad} index={index} />\n\t\t\t))}\n\t\t</ul>\n\t\t</SortableContext>\n\t</DndContext>\n\t)}\n\t{/* Lista de premios con opción de eliminar */}\n\t{items.length > 0 && (\n\t<div className=\"sorteo-section\">\n\t\t<hr style={{ marginTop: '40px' }} />\n\t\t<h3>Lista de Premios para sortear</h3>\n\t\t<ul className=\"sorteo-list\">\n\t\t{items.map(item => (\n\t\t\t<li key={item.id} className=\"sorteo-item\">\n\t\t\t{item.nombre_item} - Cantidad: {item.cantidad}\n\t\t\t<button onClick={() => eliminarPremioDelSorteo(item.id)} className=\"eliminar\">\n\t\t\t\tEliminar\n\t\t\t</button>\n\t\t\t</li>\n\t\t))}\n\t\t</ul>\n\t</div>\n\t)}\n\t<hr />\n\t{/* Botón para realizar sorteo */}\n\t<div className=\"sortear\">\n\t<button onClick={handleSortear} className=\"ejecutar\" disabled={cargando}>\n\t\t{cargando ? <ClipLoader size={20} color=\"#ffffff\" /> : 'Sortear'}\n\t</button>\n\t</div>\n\t{/* Mostrar resultado */}\n\t{resultado && (\n\t<div className=\"sorteo-result\">\n\t\t<h2>Resultado del Sorteo</h2>\n\t\t<p>ID: {resultado.sorteo_id} - Nombre: {resultado.nombre_sorteo}</p>\n\t\t{resultado.items && resultado.items.length > 0 ? (\n\t\t<ul>\n\t\t\t{resultado.items.map((itemObj, i) => (\n\t\t\t<li key={i}>\n\t\t\t\t<strong>{itemObj.orden_item}° Premio:</strong> {itemObj.nombre_item}\n\t\t\t\t<ul>\n\t\t\t\t{itemObj.ganadores.map((ganador, j) => (\n\t\t\t\t\t<li key={j}>\n\t\t\t\t\tGanador: {ganador.nombre} {ganador.apellido} ({ganador.email})\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t\t) : (\n\t\t<p>Sin items en la respuesta.</p>\n\t\t)}\n\t</div>\n\t)}\n</div>\n);\n}\n\nexport default Sorteo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}