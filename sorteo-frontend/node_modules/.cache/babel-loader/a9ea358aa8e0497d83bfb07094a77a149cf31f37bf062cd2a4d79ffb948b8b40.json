{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/git sorteo/sorteo_project/sorteo-frontend/src/components/UploadCSV.js\",\n  _s = $RefreshSig$();\n// sorteo-frontend/src/components/UploadCSV.js\n\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { toast } from 'react-toastify';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport './UploadCSV.css';\nimport { API_BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadCSV() {\n  _s();\n  const [fileUsuarios, setFileUsuarios] = useState(null);\n  const [fileListaNegra, setFileListaNegra] = useState(null);\n  const [mensaje, setMensaje] = useState('');\n  const [cargando, setCargando] = useState(false);\n  const onDropUsuarios = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type === 'text/csv') {\n      setFileUsuarios(file);\n      toast.success(`Archivo de usuarios \"${file.name}\" cargado correctamente.`);\n    } else {\n      toast.error('Por favor, sube un archivo CSV v치lido para usuarios.');\n    }\n  }, []);\n  const onDropListaNegra = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type === 'text/csv') {\n      setFileListaNegra(file);\n      toast.success(`Archivo de lista negra \"${file.name}\" cargado correctamente.`);\n    } else {\n      toast.error('Por favor, sube un archivo CSV v치lido para lista negra.');\n    }\n  }, []);\n  const {\n    getRootProps: getRootPropsUsuarios,\n    getInputProps: getInputPropsUsuarios,\n    isDragActive: isDragActiveUsuarios\n  } = useDropzone({\n    onDrop: onDropUsuarios,\n    accept: {\n      'text/csv': ['.csv']\n    }\n  });\n  const {\n    getRootProps: getRootPropsListaNegra,\n    getInputProps: getInputPropsListaNegra,\n    isDragActive: isDragActiveListaNegra\n  } = useDropzone({\n    onDrop: onDropListaNegra,\n    accept: {\n      'text/csv': ['.csv']\n    }\n  });\n  const handleUpload = async () => {\n    if (!fileUsuarios && !fileListaNegra) {\n      toast.error('Por favor, arrastra al menos un archivo: usuarios o lista negra.');\n      return;\n    }\n    setCargando(true);\n    setMensaje('');\n    toast.info('Subiendo archivo(s) CSV...');\n    const formData = new FormData();\n    if (fileUsuarios) {\n      formData.append('usuarios', fileUsuarios);\n    }\n    if (fileListaNegra) {\n      formData.append('lista_negra', fileListaNegra);\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/upload_csv/`, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data);\n      if (response.ok) {\n        setMensaje(JSON.stringify(data));\n        setFileUsuarios(null);\n        setFileListaNegra(null);\n        toast.success('Archivo(s) subido(s) correctamente.');\n      } else {\n        setMensaje(`Error: ${data.error}`);\n        toast.error(`Error: ${data.error}`);\n      }\n    } catch (err) {\n      setMensaje('Error al subir CSV.');\n      toast.error('Error al subir CSV.');\n    } finally {\n      setCargando(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-csv-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subir Archivos CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootPropsUsuarios(),\n        className: `dropzone ${isDragActiveUsuarios ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputPropsUsuarios()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), fileUsuarios ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: fileUsuarios.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Arrastra el CSV de usuarios o haz clic para seleccionarlo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootPropsListaNegra(),\n        className: `dropzone ${isDragActiveListaNegra ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputPropsListaNegra()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), fileListaNegra ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: fileListaNegra.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Arrastra el CSV de lista negra o haz clic para seleccionarlo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      className: \"upload-button\",\n      disabled: cargando,\n      children: cargando ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n        size: 20,\n        color: \"#ffffff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this) : 'Subir CSV'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), mensaje && /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"mensaje\",\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadCSV, \"7jyLERD91wccEGu0XTQ0rxKK6/g=\", false, function () {\n  return [useDropzone, useDropzone];\n});\n_c = UploadCSV;\nexport default UploadCSV;\nvar _c;\n$RefreshReg$(_c, \"UploadCSV\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","toast","ClipLoader","API_BASE_URL","jsxDEV","_jsxDEV","UploadCSV","_s","fileUsuarios","setFileUsuarios","fileListaNegra","setFileListaNegra","mensaje","setMensaje","cargando","setCargando","onDropUsuarios","acceptedFiles","file","type","success","name","error","onDropListaNegra","getRootProps","getRootPropsUsuarios","getInputProps","getInputPropsUsuarios","isDragActive","isDragActiveUsuarios","onDrop","accept","getRootPropsListaNegra","getInputPropsListaNegra","isDragActiveListaNegra","handleUpload","info","formData","FormData","append","response","fetch","method","body","data","json","console","log","ok","JSON","stringify","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","size","color","_c","$RefreshReg$"],"sources":["/Users/luciano/Desktop/git sorteo/sorteo_project/sorteo-frontend/src/components/UploadCSV.js"],"sourcesContent":["// sorteo-frontend/src/components/UploadCSV.js\n\nimport React, {useCallback, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {toast} from 'react-toastify';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport './UploadCSV.css';\nimport {API_BASE_URL} from '../config';\n\nfunction UploadCSV () {\n  const [fileUsuarios, setFileUsuarios] = useState (null);\n  const [fileListaNegra, setFileListaNegra] = useState (null);\n  const [mensaje, setMensaje] = useState ('');\n  const [cargando, setCargando] = useState (false);\n\n  const onDropUsuarios = useCallback (acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type === 'text/csv') {\n      setFileUsuarios (file);\n      toast.success (\n        `Archivo de usuarios \"${file.name}\" cargado correctamente.`\n      );\n    } else {\n      toast.error ('Por favor, sube un archivo CSV v치lido para usuarios.');\n    }\n  }, []);\n\n  const onDropListaNegra = useCallback (acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type === 'text/csv') {\n      setFileListaNegra (file);\n      toast.success (\n        `Archivo de lista negra \"${file.name}\" cargado correctamente.`\n      );\n    } else {\n      toast.error ('Por favor, sube un archivo CSV v치lido para lista negra.');\n    }\n  }, []);\n\n  const {\n    getRootProps: getRootPropsUsuarios,\n    getInputProps: getInputPropsUsuarios,\n    isDragActive: isDragActiveUsuarios,\n  } = useDropzone ({onDrop: onDropUsuarios, accept: {'text/csv': ['.csv']}});\n\n  const {\n    getRootProps: getRootPropsListaNegra,\n    getInputProps: getInputPropsListaNegra,\n    isDragActive: isDragActiveListaNegra,\n  } = useDropzone ({onDrop: onDropListaNegra, accept: {'text/csv': ['.csv']}});\n\n  const handleUpload = async () => {\n    if (!fileUsuarios && !fileListaNegra) {\n      toast.error (\n        'Por favor, arrastra al menos un archivo: usuarios o lista negra.'\n      );\n      return;\n    }\n    setCargando (true);\n    setMensaje ('');\n    toast.info ('Subiendo archivo(s) CSV...');\n    const formData = new FormData ();\n    if (fileUsuarios) {\n      formData.append ('usuarios', fileUsuarios);\n    }\n    if (fileListaNegra) {\n      formData.append ('lista_negra', fileListaNegra);\n    }\n    try {\n      const response = await fetch (`${API_BASE_URL}/api/upload_csv/`, {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json ();\n      console.log (data);\n      if (response.ok) {\n        setMensaje (JSON.stringify (data));\n        setFileUsuarios (null);\n        setFileListaNegra (null);\n        toast.success ('Archivo(s) subido(s) correctamente.');\n      } else {\n        setMensaje (`Error: ${data.error}`);\n        toast.error (`Error: ${data.error}`);\n      }\n    } catch (err) {\n      setMensaje ('Error al subir CSV.');\n      toast.error ('Error al subir CSV.');\n    } finally {\n      setCargando (false);\n    }\n  };\n\n  return (\n    <div className=\"upload-csv-container\">\n      <h2>Subir Archivos CSV</h2>\n      <div className=\"dropzone-container\">\n        <div\n          {...getRootPropsUsuarios ()}\n          className={`dropzone ${isDragActiveUsuarios ? 'active' : ''}`}\n        >\n          <input {...getInputPropsUsuarios ()} />\n          {fileUsuarios\n            ? <p>{fileUsuarios.name}</p>\n            : <p>Arrastra el CSV de usuarios o haz clic para seleccionarlo</p>}\n        </div>\n        <div\n          {...getRootPropsListaNegra ()}\n          className={`dropzone ${isDragActiveListaNegra ? 'active' : ''}`}\n        >\n          <input {...getInputPropsListaNegra ()} />\n          {fileListaNegra\n            ? <p>{fileListaNegra.name}</p>\n            : <p>\n                Arrastra el CSV de lista negra o haz clic para seleccionarlo\n              </p>}\n        </div>\n      </div>\n      <button\n        onClick={handleUpload}\n        className=\"upload-button\"\n        disabled={cargando}\n      >\n        {cargando ? <ClipLoader size={20} color=\"#ffffff\" /> : 'Subir CSV'}\n      </button>\n      {mensaje && <pre className=\"mensaje\">{mensaje}</pre>}\n    </div>\n  );\n}\n\nexport default UploadCSV;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}